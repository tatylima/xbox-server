var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.18,1,2.376]],["body/controllers/AppController.html",[0,1.339,1,3.531,2,1.262,3,0.237,4,0.206,5,0.206,6,3.379,7,0.555,8,1.558,9,4.424,10,3.971,11,5.234,12,1.512,13,0.023,14,2.697,15,3.531,16,4.424,17,3.913,18,4.424,19,0.684,20,3.971,21,1.121,22,0.882,23,0.597,24,0.83,25,5.2,26,1.121,27,3.971,28,3.971,29,3.971,30,0.517,31,3.971,32,0.684,33,3.971,34,1.262,35,3.315,36,3.379,37,3.379,38,3.971,39,0.237,40,0.135,41,1.339,42,1.339,43,2.27,44,2.464,45,3.971,46,1.83,47,3.379,48,3.971,49,3.971,50,1.189,51,3.971,52,0.017,53,0.017]],["title/modules/AppModule.html",[54,1.048,55,2.376]],["body/modules/AppModule.html",[1,3.592,2,1.463,3,0.198,4,0.172,5,0.172,13,0.023,30,0.562,32,0.572,35,3.553,36,2.822,39,0.198,40,0.113,52,0.015,53,0.015,54,1.379,55,4.809,56,1.343,57,1.865,58,2.822,59,2.822,60,2.822,61,3.856,62,3.856,63,3.856,64,3.856,65,2.517,66,3.856,67,3.856,68,2.122,69,1.528,70,1.528,71,3.317,72,2.272,73,2.44,74,3.317,75,3.317,76,3.317,77,2.822,78,3.317,79,3.317,80,3.317,81,3.317]],["title/injectables/AppService.html",[35,2,82,0.877]],["body/injectables/AppService.html",[3,0.265,4,0.231,5,0.231,7,0.622,8,1.675,9,4.758,13,0.023,16,4.758,19,0.766,21,1.256,22,0.988,23,0.668,24,0.929,26,1.256,30,0.374,32,0.766,35,3.197,39,0.265,40,0.152,47,4.758,50,1.332,52,0.018,53,0.018,82,1.402,83,1.919,84,3.784,85,5.592,86,1.47,87,4.447,88,5.592,89,3.784,90,4.447,91,4.447]],["title/controllers/AuthController.html",[0,1.18,92,2.376]],["body/controllers/AuthController.html",[0,1.348,2,1.27,3,0.239,4,0.208,5,0.208,7,0.559,8,1.564,12,1.522,13,0.023,19,0.689,21,1.129,22,0.888,23,0.601,24,0.835,26,1.129,30,0.518,32,0.689,34,1.27,39,0.239,40,0.136,41,1.348,42,1.348,43,2.986,50,1.197,52,0.017,53,0.017,92,3.547,93,3.401,94,2.285,95,3.998,96,4.642,97,3.401,98,4.073,99,3.998,100,5.223,101,3.241,102,5.223,103,3.241,104,4.444,105,3.998,106,2.481,107,3.241,108,2.285,109,3.326,110,3.401,111,3.401,112,3.998,113,3.998,114,1.725,115,3.998,116,3.998]],["title/modules/AuthModule.html",[54,1.048,61,2.171]],["body/modules/AuthModule.html",[2,1.593,3,0.224,4,0.195,5,0.195,13,0.023,30,0.553,32,0.648,39,0.224,40,0.128,52,0.016,53,0.016,54,1.502,56,1.522,57,2.03,61,4.246,65,2.613,68,2.31,69,1.731,70,1.731,72,2.473,73,2.656,92,3.832,109,3.688,110,3.197,117,3.197,118,3.197,119,3.758,120,4.003,121,3.758,122,3.758,123,2.331,124,3.758,125,2.828,126,2.148,127,1.43,128,3.758,129,2.148,130,2.148,131,1.854,132,3.758,133,3.758,134,3.197,135,3.758,136,3.758,137,3.758]],["title/injectables/AuthService.html",[82,0.877,109,2]],["body/injectables/AuthService.html",[3,0.189,4,0.165,5,0.165,7,0.444,8,1.338,13,0.023,19,0.77,21,1.261,22,0.992,23,0.671,24,0.933,26,0.896,30,0.497,32,0.547,39,0.189,40,0.108,41,1.071,42,1.506,46,2.381,50,0.951,52,0.014,53,0.014,82,0.796,83,1.37,96,3.361,97,3.8,98,3.803,101,1.97,104,2.701,109,2.553,111,2.701,125,2.389,138,2.701,139,2.549,140,1.682,141,1.682,142,2.134,143,6.297,144,3.175,145,2.367,146,3.175,147,1.682,148,3.175,149,1.815,150,3.361,151,1.682,152,2.701,153,3.205,154,1.97,155,3.175,156,3.175,157,4.467,158,2.058,159,1.679,160,2.701,161,3.175,162,2.203,163,2.389,164,2.553,165,2.367,166,3.175,167,1.815,168,1.97,169,3.175,170,3.888,171,3.175,172,3.175,173,3.175,174,3.175,175,1.566,176,3.8,177,2.701,178,3.175,179,2.389,180,3.175,181,3.175,182,1.37,183,3.175]],["title/classes/CreateGameDto.html",[40,0.119,184,2]],["body/classes/CreateGameDto.html",[3,0.143,4,0.125,5,0.125,7,0.336,12,2.317,13,0.023,19,1.049,23,0.915,30,0.306,34,0.764,39,0.143,40,0.124,52,0.012,53,0.012,86,1.421,114,2.759,184,2.083,185,0.811,186,5.281,187,1.809,188,1.387,189,3.312,190,3.744,191,1.899,192,3.312,193,3.312,194,2.731,195,3.312,196,3.312,197,1.809,198,3.644,199,5.066,200,4.177,201,3.644,202,3.644,203,2.403,204,3.312,205,4.911,206,3.335,207,3.644,208,4.911,209,4.911,210,2.403,211,2.403,212,2.474,213,3.644,214,2.403,215,2.742,216,3.644,217,3.644,218,2.403,219,4.727,220,2.403,221,3.644,222,3.644,223,3.644,224,2.403,225,2.403,226,2.403,227,3.644,228,3.644,229,2.403,230,2.045,231,2.742,232,3.644,233,3.1,234,3.644,235,2.403,236,3.644,237,2.403,238,2.403,239,3.644,240,3.644,241,3.644,242,2.403,243,3.851,244,4.911,245,4.401,246,2.989,247,2.403,248,1.491,249,2.403,250,2.403,251,2.403,252,3.312]],["title/classes/CreateGenreDto.html",[40,0.119,253,2]],["body/classes/CreateGenreDto.html",[3,0.275,4,0.239,5,0.239,7,0.644,12,1.752,13,0.022,19,0.793,23,0.692,30,0.387,34,1.463,39,0.275,40,0.157,52,0.018,53,0.018,86,1.269,114,1.986,185,1.552,188,2.175,197,3.463,199,4.299,200,3.545,212,3.88,243,3.545,253,3.266,254,4.861,255,3.463,256,3.065,257,5.713,258,5.713,259,5.713,260,4.603]],["title/classes/CreateProfileDto.html",[40,0.119,261,2]],["body/classes/CreateProfileDto.html",[3,0.207,4,0.18,5,0.18,7,0.484,12,2.059,13,0.023,19,1.003,22,1.202,23,0.875,24,0.991,30,0.399,34,1.1,39,0.207,40,0.162,52,0.015,53,0.015,86,1.459,114,2.335,158,2.682,185,1.168,188,1.805,191,2.335,200,3.907,204,2.605,215,3.569,230,4.035,231,3.569,243,3.611,246,3.674,248,2.148,252,3.569,261,2.711,262,5.188,263,2.605,264,5.411,265,4.603,266,3.462,267,3.953,268,4.743,269,3.462,270,4.743,271,3.569,272,4.743,273,3.462,274,1.507,275,2.047,276,4.743,277,4.743,278,4.743,279,4.743,280,4.743,281,4.743,282,3.462]],["title/classes/CreateUserDto.html",[40,0.119,283,2]],["body/classes/CreateUserDto.html",[3,0.155,4,0.135,5,0.135,7,0.363,12,2.176,13,0.023,17,2.902,19,1.02,22,1.023,23,0.89,30,0.324,34,0.824,39,0.155,40,0.132,52,0.012,53,0.012,86,1.444,96,3.839,101,2.393,114,2.467,153,2.633,154,2.858,170,4.577,185,0.874,188,1.468,191,1.988,197,1.951,200,4.032,204,1.951,206,3.464,215,2.902,231,2.902,243,3.673,246,3.703,248,1.608,252,2.902,267,2.619,271,3.839,275,2.625,283,2.205,284,5.175,285,1.951,286,4.606,287,4.103,288,3.128,289,3.857,290,5.101,291,3.839,292,3.857,293,4.34,294,2.592,295,3.281,296,3.857,297,3.857,298,3.857,299,2.592,300,2.592,301,3.857,302,3.857,303,3.281,304,2.592,305,3.857,306,2.592,307,3.281,308,2.592,309,3.857,310,3.857,311,3.857,312,2.592,313,2.592,314,3.857,315,3.857,316,3.857,317,3.857,318,2.592,319,2.592,320,3.281,321,4.34,322,2.592,323,2.592,324,2.592,325,2.592,326,2.592]],["title/classes/Game.html",[40,0.119,327,1.726]],["body/classes/Game.html",[3,0.208,4,0.181,5,0.181,7,0.487,13,0.022,19,1.183,23,1.032,24,1.374,39,0.208,40,0.119,52,0.015,53,0.015,86,1.545,114,2.342,185,1.174,188,1.813,189,4.084,190,4.617,191,2.342,192,4.084,193,4.084,194,3.367,195,4.084,196,4.084,219,5.367,274,1.725,327,2.349,328,2.962,329,3.367,330,3.367,331,3.962,332,3.482,333,3.482,334,3.482,335,3.482,336,3.482,337,3.482,338,3.482,339,3.482,340,3.482,341,3.482,342,3.482,343,3.482]],["title/controllers/GameController.html",[0,1.18,344,2.376]],["body/controllers/GameController.html",[2,0.744,3,0.14,4,0.122,5,0.122,7,0.328,8,1.07,12,1.986,13,0.023,14,1.59,15,2.426,19,0.899,21,1.368,22,1.077,23,0.728,24,1.012,26,1.473,30,0.508,32,0.404,34,0.744,39,0.14,40,0.08,41,0.79,42,0.79,43,3.144,44,3.238,50,1.452,52,0.011,53,0.011,86,1.343,94,1.339,103,3.659,106,2.217,107,1.453,108,1.339,127,0.891,159,1.981,175,2.909,182,1.869,184,2.77,199,4.438,274,2.102,327,1.762,344,2.426,345,1.992,346,1.36,347,2.091,348,1.762,349,1.762,350,1.453,351,1.59,352,3.573,353,2.342,354,4.005,355,1.339,356,1.762,357,3.04,358,3.735,359,2.342,360,1.992,361,2.426,362,2.217,363,2.042,364,3.04,365,2.342,366,1.155,367,1.762,368,2.342,369,1.339,370,3.007,371,1.762,372,2.688,373,2.342,374,2.342,375,2.342,376,1.59,377,2.426,378,2.476,379,1.992,380,1.155,381,2.688,382,1.155,383,1.992,384,1.339,385,1.339,386,1.59,387,1.241,388,2.342,389,1.59,390,2.342,391,2.342,392,1.453,393,1.59,394,2.342,395,1.762,396,2.342,397,1.59,398,1.762,399,3.04,400,2.342,401,1.59,402,1.59,403,1.762,404,2.342]],["title/modules/GameModule.html",[54,1.048,62,2.171]],["body/modules/GameModule.html",[2,1.697,3,0.247,4,0.215,5,0.215,13,0.023,30,0.544,32,0.713,39,0.247,40,0.141,52,0.017,53,0.017,54,1.6,56,1.676,57,2.163,62,4.238,65,2.683,68,2.461,69,1.906,70,1.906,72,2.634,73,2.83,77,3.52,126,2.365,127,1.575,129,2.365,130,2.365,131,2.041,344,4.016,378,3.787,379,3.52,405,3.52,406,4.137,407,3.52,408,4.137,409,4.137]],["title/injectables/GameService.html",[82,0.877,378,2]],["body/injectables/GameService.html",[3,0.116,4,0.101,5,0.101,7,0.271,8,0.923,13,0.023,19,0.876,21,1.348,22,1.061,23,0.717,24,0.997,26,1.348,30,0.448,32,0.334,39,0.116,40,0.066,41,0.653,42,0.653,46,2.015,50,1.31,52,0.01,53,0.01,82,0.772,83,0.836,86,1.267,101,1.202,114,1.33,139,2.994,140,1.026,141,1.026,142,1.664,145,2.033,147,2.033,149,2.5,151,1.026,158,2.015,159,1.846,162,2.355,164,2.5,165,2.317,167,2.5,168,1.202,175,2.508,182,1.33,184,2.5,189,2.319,191,1.33,192,2.319,193,2.319,194,1.912,195,2.319,196,2.319,206,2.606,256,2.812,271,2.319,274,1.895,275,1.656,327,1.893,346,1.46,347,2.06,348,1.52,349,1.52,350,1.912,354,2.97,355,1.761,366,1.52,369,1.761,370,2.713,378,1.761,380,0.955,381,2.319,382,0.955,383,1.648,387,1.026,410,1.648,411,1.937,412,1.937,413,1.937,414,1.937,415,1.937,416,1.937,417,1.315,418,1.457,419,1.648,420,1.937,421,3.081,422,4.373,423,1.937,424,1.937,425,1.937,426,3.721,427,2.97,428,2.887,429,1.937,430,1.315,431,1.315,432,1.937,433,1.937,434,2.887,435,2.97,436,1.937,437,3.081,438,3.081,439,3.081,440,3.081,441,2.621,442,3.081,443,3.081,444,3.081,445,2.621,446,3.081,447,1.937,448,2.606,449,2.606,450,2.606,451,1.937,452,2.092,453,1.937,454,1.937,455,1.937,456,1.937,457,1.937]],["title/classes/Genre.html",[40,0.119,256,1.726]],["body/classes/Genre.html",[3,0.265,4,0.231,5,0.231,7,0.622,13,0.022,19,1.106,23,0.965,24,1.41,39,0.265,40,0.152,52,0.018,53,0.018,86,1.426,185,1.5,188,2.129,256,3.262,274,1.944,329,3.795,330,3.795,331,4.359,458,3.784,459,4.447,460,4.447,461,4.447,462,4.447]],["title/controllers/GenreController.html",[0,1.18,463,2.376]],["body/controllers/GenreController.html",[0,0.77,2,0.726,3,0.136,4,0.119,5,0.119,7,0.319,8,1.05,12,1.964,13,0.023,14,1.55,15,2.38,19,0.889,21,1.35,22,1.063,23,0.719,24,0.999,26,1.457,30,0.504,32,0.394,34,0.726,39,0.136,40,0.078,41,0.77,42,0.77,43,3.113,44,3.201,50,1.433,52,0.011,53,0.011,86,1.333,94,1.305,103,3.63,106,2.646,107,2.174,108,1.305,127,0.869,159,1.956,175,2.797,182,1.84,212,3.973,253,2.734,256,1.729,274,2.075,346,1.334,347,2.064,348,1.729,349,1.729,350,1.417,351,1.55,354,3.973,355,1.305,356,1.718,357,2.981,358,3.698,360,1.943,361,2.38,362,2.174,363,2.003,366,1.126,367,1.718,369,1.305,371,1.718,372,2.637,376,1.55,377,2.38,380,1.126,382,1.126,384,1.305,385,1.305,386,1.55,387,1.21,389,1.55,392,1.417,393,1.55,395,1.718,397,1.55,398,1.718,401,1.55,402,1.55,403,1.718,463,2.38,464,1.943,465,3.504,466,2.981,467,2.283,468,4.097,469,2.283,470,2.981,471,2.283,472,2.283,473,2.967,474,2.283,475,1.943,476,1.718,477,1.55,478,1.718,479,1.718,480,2.637,481,2.438,482,1.943,483,2.283,484,1.943,485,2.283,486,2.283,487,2.283,488,2.283,489,2.283,490,2.981,491,2.283,492,2.283,493,2.283]],["title/modules/GenreModule.html",[54,1.048,63,2.171]],["body/modules/GenreModule.html",[2,1.675,3,0.242,4,0.211,5,0.211,13,0.023,30,0.54,32,0.698,39,0.242,40,0.138,52,0.017,53,0.017,54,1.578,56,1.641,57,2.134,63,4.22,65,2.668,68,2.428,69,1.867,70,1.867,72,2.888,73,2.792,123,2.514,126,2.317,127,1.543,129,2.317,130,2.317,131,1.999,158,1.867,463,3.976,481,3.766,482,3.448,494,3.448,495,3.448,496,4.053,497,4.053,498,4.053,499,4.053,500,4.053,501,4.053]],["title/injectables/GenreService.html",[82,0.877,481,2]],["body/injectables/GenreService.html",[3,0.139,4,0.121,5,0.121,7,0.326,8,1.067,13,0.023,19,0.946,21,1.471,22,1.157,23,0.783,24,1.088,26,1.471,30,0.48,32,0.402,39,0.139,40,0.08,41,0.787,42,0.787,46,1.991,50,1.449,52,0.011,53,0.011,82,0.893,83,1.007,86,1.341,139,3.133,140,1.236,141,1.236,142,1.841,145,1.887,147,2.289,149,2.47,151,1.236,158,1.991,159,1.964,162,2.57,164,2.47,165,2.289,167,2.47,168,1.447,175,2.905,182,1.537,253,2.765,256,2.386,274,1.957,275,1.537,346,1.356,347,2.087,348,1.757,349,2.131,350,2.21,354,2.419,355,2.036,366,1.757,380,1.151,382,1.151,387,1.236,417,1.584,428,3.252,430,1.584,431,1.584,434,3.252,435,2.934,448,2.419,449,2.419,450,2.419,452,2.419,473,3.001,480,2.68,481,2.036,484,1.985,502,1.985,503,2.333,504,2.333,505,2.333,506,2.333,507,2.333,508,3.562,509,2.333,510,1.447,511,1.447,512,1.755,513,1.985,514,2.333,515,2.333,516,1.985,517,2.333,518,1.755,519,2.333]],["title/controllers/HomepageController.html",[0,1.18,520,2.376]],["body/controllers/HomepageController.html",[0,1.456,2,1.372,3,0.258,4,0.225,5,0.225,7,0.604,8,1.644,12,1.644,13,0.023,19,0.744,21,1.219,22,0.959,23,0.649,24,0.902,26,1.219,30,0.507,32,0.744,34,1.372,39,0.258,40,0.147,41,1.456,42,1.456,50,1.293,52,0.018,53,0.018,86,1.341,94,2.468,108,2.468,274,1.744,347,2.369,392,3.406,477,2.932,520,3.727,521,3.674,522,4.318,523,3.674,524,4.318,525,3.449,526,3.674,527,4.318,528,4.318,529,4.318,530,4.318]],["title/modules/HomepageModule.html",[54,1.048,64,2.171]],["body/modules/HomepageModule.html",[2,1.701,3,0.248,4,0.216,5,0.216,13,0.023,30,0.544,32,0.716,39,0.248,40,0.142,52,0.017,53,0.017,54,1.603,56,1.681,57,2.168,64,4.241,65,2.686,68,2.466,69,1.913,70,1.913,72,2.64,73,2.836,123,2.576,126,2.373,127,1.58,129,2.373,130,2.373,131,2.048,520,4.023,525,3.791,526,3.532,531,3.532,532,3.532,533,4.152,534,4.152,535,4.152]],["title/injectables/HomepageService.html",[82,0.877,525,2]],["body/injectables/HomepageService.html",[3,0.186,4,0.162,5,0.162,7,0.436,8,1.32,13,0.023,19,0.76,21,1.245,22,1.236,23,0.663,24,0.921,26,0.88,30,0.37,32,0.537,39,0.186,40,0.106,41,1.051,42,1.051,46,2.031,50,0.933,52,0.014,53,0.014,82,1.105,83,1.345,86,1.137,101,1.934,139,2.523,140,1.651,141,1.651,142,2.117,145,2.336,147,1.651,151,1.651,158,1.436,159,0.933,162,2.175,191,2.208,194,2.735,212,2.116,256,2.523,267,2.994,274,1.626,275,1.345,288,2.116,327,2.523,347,1.903,362,1.934,363,2.52,364,2.651,427,4.531,468,2.345,470,2.651,513,2.651,523,3.751,525,2.52,536,2.651,537,3.116,538,3.116,539,4.409,540,2.651,541,3.116,542,3.116,543,4.713,544,4.409,545,3.116,546,3.116,547,3.116,548,3.116,549,2.651,550,4.409]],["title/injectables/JwtStrategy.html",[82,0.877,120,2.171]],["body/injectables/JwtStrategy.html",[3,0.213,4,0.185,5,0.185,7,0.499,8,1.45,13,0.023,19,0.834,21,1.366,22,1.075,23,0.886,24,1.011,26,1.007,30,0.495,32,0.615,39,0.213,40,0.122,41,1.203,42,1.203,46,1.643,50,1.068,52,0.015,53,0.015,82,1.213,83,1.539,86,0.792,120,3.003,127,1.357,131,1.759,134,3.034,139,2.71,140,1.889,141,1.889,142,2.243,145,2.564,147,1.889,149,2.767,151,1.889,153,2.767,159,1.646,160,3.034,162,1.759,163,2.683,164,2.038,165,1.889,167,2.767,176,3.034,179,2.683,182,1.539,275,1.539,551,3.034,552,4.84,553,3.566,554,4.84,555,4.84,556,3.566,557,3.566,558,3.566,559,3.566,560,3.566,561,3.034,562,2.038,563,3.566,564,3.566,565,3.566,566,3.566,567,3.566,568,3.566,569,3.566,570,3.566,571,3.034,572,3.566]],["title/classes/LoginDto.html",[40,0.119,98,2.171]],["body/classes/LoginDto.html",[3,0.244,4,0.213,5,0.213,7,0.573,12,2.019,13,0.023,17,3.992,19,0.914,23,0.797,30,0.446,34,1.301,39,0.244,40,0.181,52,0.017,53,0.017,86,1.383,98,3.291,114,2.289,153,3.686,154,3.651,170,3.992,185,1.381,188,2.019,200,3.862,243,3.651,246,3.996,248,2.54,275,2.289,293,4.513,295,3.484,303,4.513,320,4.513,321,5.007,573,3.484,574,4.095,575,5.305,576,4.095,577,4.095]],["title/modules/PrismaModule.html",[54,1.048,65,1.417]],["body/modules/PrismaModule.html",[3,0.253,4,0.22,5,0.22,13,0.022,30,0.456,32,0.731,39,0.253,40,0.145,52,0.017,53,0.017,54,1.625,56,1.717,57,2.197,65,2.746,68,2.5,69,1.954,70,1.954,72,2.677,142,2.692,233,3.608,291,3.191,363,2.424,419,3.608,578,3.608,579,3.608,580,3.608,581,4.241,582,5.426,583,4.241,584,4.241,585,5.426,586,4.241,587,4.241,588,4.241,589,3.608,590,4.241,591,4.241,592,4.241,593,4.241]],["title/injectables/PrismaService.html",[82,0.877,142,1.332]],["body/injectables/PrismaService.html",[3,0.231,4,0.201,5,0.201,7,0.541,8,1.531,13,0.023,18,3.291,19,0.881,21,1.092,22,0.859,23,0.581,24,0.808,26,1.443,30,0.43,32,0.667,39,0.231,40,0.132,52,0.016,53,0.016,82,1.281,83,1.669,139,3.272,142,1.945,158,2.355,162,2.521,177,4.348,206,2.627,291,2.91,418,2.91,562,2.922,571,3.291,589,4.348,594,3.291,595,5.724,596,5.111,597,6.504,598,5.111,599,6.089,600,3.868,601,3.291,602,3.868,603,3.868,604,5.111,605,3.868,606,3.868,607,3.868,608,3.868,609,3.868,610,3.868,611,3.868]],["title/classes/Profile.html",[40,0.119,612,2.171]],["body/classes/Profile.html",[3,0.23,4,0.2,5,0.2,7,0.539,13,0.023,19,1.142,22,1.27,23,0.996,24,1.436,30,0.429,39,0.23,40,0.131,52,0.016,53,0.016,86,1.444,159,1.946,185,1.3,188,1.941,191,2.466,274,1.816,327,3.205,329,3.546,330,3.546,331,4.13,387,2.043,612,3.164,613,3.28,614,3.855,615,3.855,616,3.855,617,3.855,618,3.855,619,3.855,620,3.855,621,3.855]],["title/controllers/ProfileController.html",[0,1.18,622,2.376]],["body/controllers/ProfileController.html",[0,0.794,2,0.749,3,0.141,4,0.122,5,0.122,7,0.329,8,1.075,12,1.991,13,0.023,14,1.6,15,2.437,19,0.902,21,1.372,22,1.08,23,0.731,24,1.016,26,1.477,30,0.497,32,0.406,34,0.749,39,0.141,40,0.08,41,0.794,42,0.794,43,3.151,44,3.246,50,1.567,52,0.011,53,0.011,86,1.345,94,1.347,103,3.666,106,2.697,107,2.227,108,1.347,127,0.897,159,1.983,175,2.915,182,1.876,261,2.779,267,4.012,274,2.104,346,1.366,347,2.098,348,1.77,349,2.144,350,1.462,351,1.6,355,1.347,356,1.773,358,3.743,361,2.437,362,2.227,363,2.052,366,1.162,367,1.773,369,1.347,371,1.773,372,2.701,376,1.6,377,2.437,380,1.162,382,1.162,384,2.052,385,1.347,386,1.6,387,1.248,389,1.6,392,1.462,393,1.6,395,1.773,397,1.6,399,3.053,401,1.6,402,1.6,403,1.773,466,3.053,475,2.004,476,1.773,477,1.6,478,1.773,479,1.773,612,1.462,622,2.437,623,2.004,624,3.053,625,2.356,626,3.053,627,2.356,628,3.589,629,2.356,630,2.356,631,3.016,632,2.356,633,2.485,634,2.004,635,2.701,636,2.356,637,2.356,638,2.356,639,2.356,640,2.356,641,2.356,642,2.356]],["title/modules/ProfileModule.html",[54,1.048,66,2.171]],["body/modules/ProfileModule.html",[2,1.701,3,0.248,4,0.216,5,0.216,13,0.023,30,0.544,32,0.716,39,0.248,40,0.142,52,0.017,53,0.017,54,1.603,56,1.681,57,2.168,65,2.686,66,4.241,68,2.466,69,1.913,70,1.913,72,2.64,73,2.836,123,2.576,126,2.373,127,1.58,129,2.373,130,2.373,131,2.048,622,4.023,633,3.791,634,3.532,643,3.532,644,3.532,645,4.152,646,4.152,647,4.152]],["title/injectables/ProfileService.html",[82,0.877,633,2]],["body/injectables/ProfileService.html",[3,0.118,4,0.103,5,0.103,7,0.278,8,0.941,13,0.023,19,0.886,21,1.364,22,1.277,23,0.726,24,1.009,26,1.364,30,0.452,32,0.342,39,0.118,40,0.068,41,0.67,42,0.67,46,0.915,50,1.539,52,0.01,53,0.01,82,0.788,83,0.857,86,1.411,139,3.013,140,1.052,141,1.052,142,1.688,145,1.665,147,2.066,149,1.796,151,1.052,158,1.448,159,1.539,162,2.535,164,1.796,165,1.665,167,1.796,168,1.232,175,2.535,182,1.356,191,1.914,194,1.232,261,2.535,265,4.749,274,2.037,275,0.857,327,2.383,346,1.688,347,1.914,348,1.55,349,2.187,355,1.796,366,1.55,380,0.979,382,0.979,387,1.052,417,1.348,426,4.372,427,3.903,428,2.935,430,1.348,431,1.348,434,1.494,435,3.011,441,3.773,445,2.673,448,1.348,449,1.348,450,1.348,452,2.134,510,1.232,511,1.232,512,1.494,518,3.337,540,1.689,543,2.365,549,4.372,612,1.232,631,2.751,633,1.796,635,2.365,648,1.689,649,1.985,650,3.142,651,1.985,652,1.985,653,1.985,654,1.985,655,3.142,656,1.985,657,1.985,658,1.985,659,4.434,660,4.434,661,4.434,662,3.142,663,1.985]],["title/classes/UpdateGameDto.html",[40,0.119,370,2.171]],["body/classes/UpdateGameDto.html",[3,0.3,4,0.262,5,0.262,13,0.022,30,0.507,39,0.3,40,0.172,52,0.019,53,0.019,184,2.876,185,1.697,187,3.786,346,1.915,370,3.743,381,3.786,562,2.876,664,4.281,665,3.417,666,3.786,667,3.786,668,5.032]],["title/classes/UpdateGenreDto.html",[40,0.119,473,2.171]],["body/classes/UpdateGenreDto.html",[3,0.302,4,0.263,5,0.263,13,0.022,30,0.508,39,0.302,40,0.172,52,0.019,53,0.019,185,1.704,253,2.889,255,3.802,346,1.923,473,3.753,480,3.802,562,2.889,665,3.432,666,3.802,667,3.802,669,4.299,670,5.053]],["title/classes/UpdateProfileDto.html",[40,0.119,631,2.171]],["body/classes/UpdateProfileDto.html",[3,0.302,4,0.263,5,0.263,13,0.022,30,0.508,34,1.606,39,0.302,40,0.172,52,0.019,53,0.019,185,1.704,261,2.889,263,3.802,346,1.923,562,2.889,631,3.753,635,3.802,665,3.432,671,4.299,672,5.053]],["title/classes/UpdateUserDto.html",[40,0.119,673,2.171]],["body/classes/UpdateUserDto.html",[3,0.302,4,0.263,5,0.263,13,0.022,30,0.508,34,1.606,39,0.302,40,0.172,52,0.019,53,0.019,185,1.704,283,2.889,285,3.802,346,1.923,562,2.889,665,3.432,673,3.753,674,4.299,675,3.802,676,5.053]],["title/classes/User.html",[40,0.119,159,1.048]],["body/classes/User.html",[3,0.226,4,0.197,5,0.197,7,0.529,13,0.022,19,1.169,22,1.258,23,1.019,24,1.4,39,0.226,40,0.129,52,0.016,53,0.016,86,1.546,153,3.236,154,3.512,159,1.508,185,1.275,188,1.916,191,2.443,274,1.799,287,4.259,288,3.844,307,4.284,329,3.512,330,3.512,331,4.098,677,3.217,678,3.782,679,3.782,680,3.782,681,3.782,682,3.782,683,3.782,684,3.782,685,3.782,686,3.782]],["title/controllers/UserController.html",[0,1.18,687,2.376]],["body/controllers/UserController.html",[0,0.812,2,0.765,3,0.144,4,0.125,5,0.125,7,0.337,8,1.093,12,2.011,13,0.023,19,0.911,21,1.388,22,1.092,23,0.739,24,1.027,26,1.492,30,0.5,32,0.415,34,0.765,39,0.144,40,0.082,41,0.812,42,0.812,43,3.178,44,3.278,50,1.582,52,0.012,53,0.012,86,1.353,94,1.377,103,3.691,106,2.264,107,2.264,108,1.377,127,0.917,159,1.665,182,1.575,274,2.078,275,2.567,283,3.178,346,1.389,347,2.122,348,1.8,349,1.8,351,1.635,358,3.776,361,3.339,362,2.264,363,2.086,366,1.188,369,1.377,376,1.635,377,3.588,380,1.188,382,1.188,384,1.377,385,1.377,386,1.635,389,3.339,392,1.494,393,1.635,397,1.635,398,1.812,401,1.635,402,1.635,468,4.184,476,1.812,477,1.635,478,1.812,479,1.812,490,2.049,624,3.105,626,3.105,673,3.691,675,2.746,687,2.478,688,2.049,689,2.408,690,2.408,691,2.049,692,2.408,693,2.408,694,2.408,695,3.65,696,2.408,697,2.408,698,2.408,699,2.408,700,3.65,701,2.408,702,2.408,703,2.519,704,2.049,705,2.049,706,2.408,707,2.408,708,2.408,709,2.408,710,2.408,711,2.408,712,2.408,713,2.408,714,2.408]],["title/modules/UserModule.html",[54,1.048,67,2.171]],["body/modules/UserModule.html",[2,1.697,3,0.247,4,0.215,5,0.215,13,0.023,30,0.544,32,0.713,39,0.247,40,0.141,52,0.017,53,0.017,54,1.6,56,1.676,57,2.163,65,2.683,67,4.238,68,2.461,69,1.906,70,1.906,72,2.634,73,2.83,123,2.567,126,2.365,127,1.575,129,2.365,130,2.365,131,2.041,687,4.016,703,3.787,704,3.52,715,3.52,716,4.137,717,3.52,718,4.137,719,4.137]],["title/injectables/UserService.html",[82,0.877,703,2]],["body/injectables/UserService.html",[3,0.118,4,0.102,5,0.102,7,0.275,8,0.935,13,0.023,19,0.959,21,1.359,22,1.192,23,0.806,24,1.005,26,1.359,30,0.451,32,0.339,39,0.118,40,0.067,41,0.664,42,0.664,46,1.787,50,1.322,52,0.01,53,0.01,82,0.783,83,0.85,86,1.274,139,3.126,140,1.043,141,1.043,142,1.68,145,1.654,147,2.339,149,1.785,150,2.349,151,1.043,152,3.3,153,1.785,154,2.407,158,1.787,159,1.534,162,2.647,163,1.482,164,2.751,165,2.55,167,2.523,168,1.222,175,2.526,179,2.349,182,1.905,188,1.188,191,1.347,274,1.904,275,1.347,283,2.523,287,2.919,288,3.268,329,1.937,330,1.937,346,1.476,347,1.905,348,1.54,349,1.54,366,1.54,369,1.785,380,0.971,382,0.971,417,1.337,427,4.347,430,1.337,431,1.337,435,3.644,448,1.337,449,1.337,450,1.337,452,2.12,510,1.222,511,1.222,512,1.482,516,1.675,518,1.482,543,3.321,673,2.739,675,2.349,691,2.656,703,1.785,705,1.675,720,1.675,721,3.879,722,3.122,723,3.122,724,1.969,725,1.969,726,1.969,727,1.969,728,1.969,729,1.969,730,1.675,731,1.675,732,1.969,733,1.969,734,1.969,735,4.414,736,3.879,737,4.414,738,3.122,739,3.122,740,3.122,741,3.122,742,3.122,743,1.969,744,3.122,745,1.969,746,1.969,747,1.969,748,1.969,749,1.969,750,1.969,751,3.122,752,1.969,753,1.969,754,1.969,755,1.969]],["title/coverage.html",[756,3.595]],["body/coverage.html",[0,2.049,1,1.911,5,0.146,6,2.394,13,0.023,23,0.423,35,1.608,40,0.227,52,0.013,53,0.013,82,1.592,84,2.394,92,1.911,93,2.394,98,1.746,109,1.608,120,1.746,138,2.394,142,1.071,159,0.843,165,1.491,184,1.608,186,2.394,187,3.083,253,1.608,254,2.394,255,3.083,256,1.388,261,1.608,262,2.394,263,3.083,283,1.608,284,2.394,285,3.083,327,1.388,328,2.394,344,1.911,345,2.394,370,1.746,378,1.608,384,1.608,385,1.608,410,2.394,458,2.394,463,1.911,464,2.394,473,1.746,481,1.608,502,2.394,510,1.746,511,1.746,520,1.911,521,2.394,525,1.608,536,2.394,551,2.394,573,2.394,594,2.394,612,1.746,613,2.394,622,1.911,623,2.394,631,1.746,633,1.608,648,2.394,664,2.394,669,2.394,671,2.394,673,1.746,674,2.394,677,2.394,687,1.911,688,2.394,703,1.608,720,2.394,756,2.117,757,2.814,758,2.814,759,2.814,760,7.156,761,5.64,762,5.64,763,2.394,764,2.814,765,6.076,766,4.097,767,2.814,768,5.307,769,4.831,770,4.097,771,2.394,772,4.097,773,2.394,774,4.097,775,2.814,776,2.394,777,2.814,778,2.814]],["title/dependencies.html",[57,1.704,779,2.484]],["body/dependencies.html",[13,0.023,32,0.744,34,1.372,37,4.67,40,0.187,52,0.018,53,0.018,57,1.749,125,3.249,127,1.644,131,2.13,150,3.249,248,2.679,418,3.249,561,5.134,666,3.249,667,3.249,780,6.034,781,4.318,782,4.318,783,4.318,784,4.318,785,4.318,786,4.318,787,4.318,788,4.318,789,4.318,790,4.318,791,4.318,792,4.318,793,4.318,794,4.318,795,4.318,796,4.318,797,4.318,798,4.318,799,4.318,800,4.318,801,4.318,802,4.318,803,4.318,804,4.318,805,4.318]],["title/miscellaneous/functions.html",[806,1.983,807,3.58]],["body/miscellaneous/functions.html",[7,0.701,13,0.021,21,1.415,22,1.113,23,0.753,24,1.047,26,1.415,52,0.019,53,0.019,510,3.734,511,3.109,771,4.263,773,5.487,776,5.12,806,3.403,807,4.263,808,5.011,809,5.011,810,5.011,811,6.45,812,5.011]],["title/index.html",[7,0.408,813,2.92,814,2.92]],["body/index.html",[4,0.204,13,0.023,52,0.016,53,0.016,89,3.334,114,1.691,601,3.334,756,2.949,815,3.919,816,3.919,817,5.155,818,3.919,819,3.919,820,3.919,821,3.919,822,3.919,823,5.761,824,3.919,825,3.919,826,3.919,827,3.919,828,6.655,829,3.919,830,3.919,831,6.528,832,3.919,833,3.919,834,5.155,835,3.919,836,3.919,837,3.919,838,3.919,839,5.155,840,5.155,841,3.919,842,3.919,843,3.919,844,5.155,845,5.155,846,3.919,847,3.919,848,3.919,849,3.919,850,3.919,851,3.334,852,3.919,853,3.919,854,3.919,855,3.919,856,3.919,857,3.919,858,3.919,859,3.919,860,3.919,861,3.919,862,3.334,863,3.919,864,3.919,865,3.919,866,3.919,867,3.919,868,3.919,869,3.334]],["title/modules.html",[56,1.935]],["body/modules.html",[13,0.019,52,0.019,53,0.019,55,3.2,56,1.908,61,2.924,62,2.924,63,2.924,64,2.924,65,1.908,66,2.924,67,2.924,851,5.961,870,7.007,871,7.007,872,7.007]],["title/overview.html",[873,4.065]],["body/overview.html",[2,1.014,13,0.023,35,2.963,52,0.014,53,0.014,55,4.755,56,1.293,57,1.816,58,2.716,59,2.716,60,2.716,61,4.059,62,3.913,63,3.913,64,3.913,65,2.739,66,3.913,67,3.913,68,2.066,69,1.471,70,1.471,83,1.377,109,2.963,117,2.716,118,2.716,120,3.215,142,2.4,185,1.076,378,2.963,405,2.716,407,2.716,481,2.963,494,2.716,495,2.716,525,2.963,531,2.716,532,2.716,578,2.716,579,2.716,580,2.716,633,2.963,643,2.716,644,2.716,703,2.963,715,2.716,717,2.716,873,2.716,874,3.192,875,3.192,876,3.192,877,3.192]],["title/properties.html",[188,1.602,779,2.484]],["body/properties.html",[13,0.023,52,0.02,53,0.02,114,2.308,188,2.036,862,4.551,869,4.551,878,5.349,879,5.349,880,5.349]],["title/miscellaneous/variables.html",[806,1.983,881,3.58]],["body/miscellaneous/variables.html",[7,0.695,11,4.227,13,0.023,46,2.759,50,1.488,52,0.019,53,0.019,159,1.793,384,3.423,385,2.84,730,4.227,731,4.227,763,5.094,806,3.374,881,4.227,882,4.969,883,4.969,884,4.969,885,4.969,886,4.969,887,4.969]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateGameDto.html":{},"classes/CreateGenreDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"classes/Genre.html":{},"controllers/GenreController.html":{},"modules/GenreModule.html":{},"injectables/GenreService.html":{},"controllers/HomepageController.html":{},"modules/HomepageModule.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Profile.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/UpdateGameDto.html":{},"classes/UpdateGenreDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":760,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":879,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":798,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":791,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":790,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":792,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":765,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":766,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":767,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":761,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":762,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":770,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":768,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":769,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":774,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":775,"title":{},"body":{"coverage.html":{}}}],["1.0.0",{"_index":795,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":783,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":744,"title":{},"body":{"injectables/UserService.html":{}}}],["123.456.777",{"_index":297,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["13",{"_index":877,"title":{},"body":{"overview.html":{}}}],["199.00",{"_index":228,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["2",{"_index":251,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["2017",{"_index":241,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["24h",{"_index":137,"title":{},"body":{"modules/AuthModule.html":{}}}],["2})@ispositive()@apiproperty({description",{"_index":226,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["3.0.2",{"_index":800,"title":{},"body":{"dependencies.html":{}}}],["3.15.1",{"_index":787,"title":{},"body":{"dependencies.html":{}}}],["4.0.0",{"_index":793,"title":{},"body":{"dependencies.html":{}}}],["4.4.0",{"_index":805,"title":{},"body":{"dependencies.html":{}}}],["4f0d",{"_index":279,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["5",{"_index":223,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["5.0.1",{"_index":788,"title":{},"body":{"dependencies.html":{}}}],["5.2.1",{"_index":786,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":875,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":802,"title":{},"body":{"dependencies.html":{}}}],["78",{"_index":298,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["8",{"_index":874,"title":{},"body":{"overview.html":{}}}],["8.0.0",{"_index":780,"title":{},"body":{"dependencies.html":{}}}],["8.0.1",{"_index":782,"title":{},"body":{"dependencies.html":{}}}],["8.2.1",{"_index":784,"title":{},"body":{"dependencies.html":{}}}],["87ea",{"_index":280,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["9",{"_index":876,"title":{},"body":{"overview.html":{}}}],["abcd@1234",{"_index":293,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["admin",{"_index":276,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["administrador",{"_index":450,"title":{},"body":{"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["aguardar",{"_index":421,"title":{},"body":{"injectables/GameService.html":{}}}],["allgenres",{"_index":550,"title":{},"body":{"injectables/HomepageService.html":{}}}],["alterar",{"_index":750,"title":{},"body":{"injectables/UserService.html":{}}}],["amazing",{"_index":852,"title":{},"body":{"index.html":{}}}],["amazon.com/images/i/71rtzkiq4bl._ac_sx342_.jpg",{"_index":217,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["aneis",{"_index":234,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["ano",{"_index":239,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["antes",{"_index":607,"title":{},"body":{"injectables/PrismaService.html":{}}}],["api",{"_index":91,"title":{},"body":{"injectables/AppService.html":{}}}],["apibearerauth",{"_index":377,"title":{},"body":{"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["apioauth2",{"_index":483,"title":{},"body":{"controllers/GenreController.html":{}}}],["apioperation",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["apioperation,apitags",{"_index":33,"title":{},"body":{"controllers/AppController.html":{}}}],["apiproperty",{"_index":243,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreateGenreDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["apiproperty({description",{"_index":197,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreateGenreDto.html":{},"classes/CreateUserDto.html":{}}}],["apitags",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/HomepageController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["apitags('auth",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('game",{"_index":388,"title":{},"body":{"controllers/GameController.html":{}}}],["apitags('genre",{"_index":485,"title":{},"body":{"controllers/GenreController.html":{}}}],["apitags('homepage",{"_index":527,"title":{},"body":{"controllers/HomepageController.html":{}}}],["apitags('profile",{"_index":636,"title":{},"body":{"controllers/ProfileController.html":{}}}],["apitags('status",{"_index":38,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags('user",{"_index":706,"title":{},"body":{"controllers/UserController.html":{}}}],["aplicação",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"injectables/PrismaService.html":{}}}],["app",{"_index":601,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["app.close",{"_index":611,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":822,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":55,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":35,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["array",{"_index":423,"title":{},"body":{"injectables/GameService.html":{}}}],["assim",{"_index":546,"title":{},"body":{"injectables/HomepageService.html":{}}}],["async",{"_index":139,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["atualizar",{"_index":700,"title":{},"body":{"controllers/UserController.html":{}}}],["autenticado",{"_index":572,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["auth",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":122,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":92,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":376,"title":{},"body":{"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["authmodule",{"_index":61,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":862,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":109,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["autorizado",{"_index":448,"title":{},"body":{"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["await",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["ação",{"_index":257,"title":{},"body":{"classes/CreateGenreDto.html":{}}}],["backers",{"_index":853,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":733,"title":{},"body":{"injectables/UserService.html":{}}}],["badrequestexception('as",{"_index":738,"title":{},"body":{"injectables/UserService.html":{}}}],["badrequestexception('não",{"_index":748,"title":{},"body":{"injectables/UserService.html":{}}}],["banco",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PrismaService.html":{}}}],["baseurl",{"_index":47,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["bb7c",{"_index":278,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["bcrypt",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(data.password",{"_index":752,"title":{},"body":{"injectables/UserService.html":{}}}],["bcrypt.hash(dto.password",{"_index":743,"title":{},"body":{"injectables/UserService.html":{}}}],["body",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["body,controller",{"_index":374,"title":{},"body":{"controllers/GameController.html":{}}}],["boolean",{"_index":307,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["bootstrap",{"_index":773,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":872,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":870,"title":{},"body":{"modules.html":{}}}],["building",{"_index":818,"title":{},"body":{"index.html":{}}}],["cadastro",{"_index":302,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["catch(handleerror",{"_index":518,"title":{},"body":{"injectables/GenreService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["checa",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{}}}],["class",{"_index":40,"title":{"classes/CreateGameDto.html":{},"classes/CreateGenreDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/Game.html":{},"classes/Genre.html":{},"classes/LoginDto.html":{},"classes/Profile.html":{},"classes/UpdateGameDto.html":{},"classes/UpdateGenreDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateGameDto.html":{},"classes/CreateGenreDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"classes/Genre.html":{},"controllers/GenreController.html":{},"modules/GenreModule.html":{},"injectables/GenreService.html":{},"controllers/HomepageController.html":{},"modules/HomepageModule.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Profile.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/UpdateGameDto.html":{},"classes/UpdateGenreDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":185,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreateGenreDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/Game.html":{},"classes/Genre.html":{},"classes/LoginDto.html":{},"classes/Profile.html":{},"classes/UpdateGameDto.html":{},"classes/UpdateGenreDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":117,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":119,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":118,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_gamemodule",{"_index":405,"title":{},"body":{"modules/GameModule.html":{},"overview.html":{}}}],["cluster_gamemodule_imports",{"_index":406,"title":{},"body":{"modules/GameModule.html":{}}}],["cluster_gamemodule_providers",{"_index":407,"title":{},"body":{"modules/GameModule.html":{},"overview.html":{}}}],["cluster_genremodule",{"_index":494,"title":{},"body":{"modules/GenreModule.html":{},"overview.html":{}}}],["cluster_genremodule_imports",{"_index":496,"title":{},"body":{"modules/GenreModule.html":{}}}],["cluster_genremodule_providers",{"_index":495,"title":{},"body":{"modules/GenreModule.html":{},"overview.html":{}}}],["cluster_homepagemodule",{"_index":531,"title":{},"body":{"modules/HomepageModule.html":{},"overview.html":{}}}],["cluster_homepagemodule_imports",{"_index":533,"title":{},"body":{"modules/HomepageModule.html":{}}}],["cluster_homepagemodule_providers",{"_index":532,"title":{},"body":{"modules/HomepageModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":578,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":579,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":580,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_profilemodule",{"_index":643,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_imports",{"_index":645,"title":{},"body":{"modules/ProfileModule.html":{}}}],["cluster_profilemodule_providers",{"_index":644,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":715,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":716,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":717,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["com",{"_index":431,"title":{},"body":{"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["como",{"_index":547,"title":{},"body":{"injectables/HomepageService.html":{}}}],["comprar",{"_index":352,"title":{},"body":{"controllers/GameController.html":{}}}],["conectado",{"_index":605,"title":{},"body":{"injectables/PrismaService.html":{}}}],["confirmação",{"_index":289,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["confirmpassword",{"_index":286,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["connect",{"_index":445,"title":{},"body":{"injectables/GameService.html":{},"injectables/ProfileService.html":{}}}],["const",{"_index":46,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":140,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["constructor(prisma",{"_index":141,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":41,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenreController.html":{},"injectables/GenreService.html":{},"controllers/HomepageController.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["conta",{"_index":575,"title":{},"body":{"classes/LoginDto.html":{}}}],["contate",{"_index":449,"title":{},"body":{"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["conteúdo",{"_index":501,"title":{},"body":{"modules/GenreModule.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/HomepageController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/GenreController.html":{},"controllers/HomepageController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('game",{"_index":390,"title":{},"body":{"controllers/GameController.html":{}}}],["controller('genre",{"_index":486,"title":{},"body":{"controllers/GenreController.html":{}}}],["controller('homepage",{"_index":528,"title":{},"body":{"controllers/HomepageController.html":{}}}],["controller('profile",{"_index":637,"title":{},"body":{"controllers/ProfileController.html":{}}}],["controller('user",{"_index":707,"title":{},"body":{"controllers/UserController.html":{}}}],["controller,get,req",{"_index":31,"title":{},"body":{"controllers/AppController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"controllers/GenreController.html":{},"modules/GenreModule.html":{},"controllers/HomepageController.html":{},"modules/HomepageModule.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["correta",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{}}}],["corrida",{"_index":258,"title":{},"body":{"classes/CreateGenreDto.html":{}}}],["coverage",{"_index":756,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["cpf",{"_index":287,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["create",{"_index":346,"title":{},"body":{"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenreController.html":{},"injectables/GenreService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/UpdateGameDto.html":{},"classes/UpdateGenreDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["create(@body",{"_index":708,"title":{},"body":{"controllers/UserController.html":{}}}],["create(@loggeduser",{"_index":395,"title":{},"body":{"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/ProfileController.html":{}}}],["create(createuserdto",{"_index":689,"title":{},"body":{"controllers/UserController.html":{}}}],["create(dto",{"_index":723,"title":{},"body":{"injectables/UserService.html":{}}}],["create(user",{"_index":350,"title":{},"body":{"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenreController.html":{},"injectables/GenreService.html":{},"controllers/ProfileController.html":{}}}],["create(userid",{"_index":650,"title":{},"body":{"injectables/ProfileService.html":{}}}],["createdat",{"_index":329,"title":{},"body":{"classes/Game.html":{},"classes/Genre.html":{},"classes/Profile.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["creategamedto",{"_index":184,"title":{"classes/CreateGameDto.html":{}},"body":{"classes/CreateGameDto.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"classes/UpdateGameDto.html":{},"coverage.html":{}}}],["creategenredto",{"_index":253,"title":{"classes/CreateGenreDto.html":{}},"body":{"classes/CreateGenreDto.html":{},"controllers/GenreController.html":{},"injectables/GenreService.html":{},"classes/UpdateGenreDto.html":{},"coverage.html":{}}}],["createparamdecorator((_",{"_index":883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createprofiledto",{"_index":261,"title":{"classes/CreateProfileDto.html":{}},"body":{"classes/CreateProfileDto.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/UpdateProfileDto.html":{},"coverage.html":{}}}],["createuserdto",{"_index":283,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["criar",{"_index":624,"title":{},"body":{"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["ctx",{"_index":884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["da",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["data",{"_index":435,"title":{},"body":{"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["data.password",{"_index":751,"title":{},"body":{"injectables/UserService.html":{}}}],["date",{"_index":331,"title":{},"body":{"classes/Game.html":{},"classes/Genre.html":{},"classes/Profile.html":{},"classes/User.html":{}}}],["de",{"_index":206,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreateUserDto.html":{},"injectables/GameService.html":{},"injectables/PrismaService.html":{}}}],["decorators",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateGameDto.html":{},"classes/CreateGenreDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/HomepageController.html":{},"classes/LoginDto.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["default",{"_index":730,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":130,"title":{},"body":{"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/GenreModule.html":{},"modules/HomepageModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["defined",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateGameDto.html":{},"classes/CreateGenreDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"classes/Genre.html":{},"controllers/GenreController.html":{},"injectables/GenreService.html":{},"controllers/HomepageController.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"injectables/PrismaService.html":{},"classes/Profile.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["deletar",{"_index":626,"title":{},"body":{"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["delete",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenreController.html":{},"injectables/GenreService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["delete(':id",{"_index":401,"title":{},"body":{"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["delete(':id')@httpcode(httpstatus.no_content)@apioperation({summary",{"_index":356,"title":{},"body":{"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/ProfileController.html":{}}}],["delete(':id')@useguards(undefined)@apibearerauth()@httpcode(httpstatus.no_content)@apioperation({summary",{"_index":692,"title":{},"body":{"controllers/UserController.html":{}}}],["delete(@loggeduser",{"_index":403,"title":{},"body":{"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/ProfileController.html":{}}}],["delete(@param('id",{"_index":713,"title":{},"body":{"controllers/UserController.html":{}}}],["delete(id",{"_index":691,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["delete(user",{"_index":355,"title":{},"body":{"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenreController.html":{},"injectables/GenreService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["delete,httpcode",{"_index":702,"title":{},"body":{"controllers/UserController.html":{}}}],["dependencies",{"_index":57,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/GenreModule.html":{},"modules/HomepageModule.html":{},"modules/PrismaModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desconectado",{"_index":609,"title":{},"body":{"injectables/PrismaService.html":{}}}],["description",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateGameDto.html":{},"classes/CreateGenreDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/Game.html":{},"injectables/GameService.html":{},"classes/LoginDto.html":{},"index.html":{},"properties.html":{}}}],["descrição",{"_index":198,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["desligar",{"_index":608,"title":{},"body":{"injectables/PrismaService.html":{}}}],["deste",{"_index":545,"title":{},"body":{"injectables/HomepageService.html":{}}}],["determina",{"_index":584,"title":{},"body":{"modules/PrismaModule.html":{}}}],["deve",{"_index":290,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["development",{"_index":830,"title":{},"body":{"index.html":{}}}],["disable",{"_index":28,"title":{},"body":{"controllers/AppController.html":{}}}],["disconnect",{"_index":454,"title":{},"body":{"injectables/GameService.html":{}}}],["dizemos",{"_index":420,"title":{},"body":{"injectables/GameService.html":{}}}],["docs",{"_index":88,"title":{},"body":{"injectables/AppService.html":{}}}],["documentation",{"_index":757,"title":{},"body":{"coverage.html":{}}}],["dos",{"_index":233,"title":{},"body":{"classes/CreateGameDto.html":{},"modules/PrismaModule.html":{}}}],["dto",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenreController.html":{},"injectables/GenreService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["dto,user",{"_index":492,"title":{},"body":{"controllers/GenreController.html":{}}}],["dto.confirmpassword",{"_index":737,"title":{},"body":{"injectables/UserService.html":{}}}],["dto.cpf",{"_index":747,"title":{},"body":{"injectables/UserService.html":{}}}],["dto.description",{"_index":438,"title":{},"body":{"injectables/GameService.html":{}}}],["dto.gameid",{"_index":659,"title":{},"body":{"injectables/ProfileService.html":{}}}],["dto.gameplayyoutubeurl",{"_index":443,"title":{},"body":{"injectables/GameService.html":{}}}],["dto.genrename",{"_index":446,"title":{},"body":{"injectables/GameService.html":{}}}],["dto.image",{"_index":441,"title":{},"body":{"injectables/GameService.html":{},"injectables/ProfileService.html":{}}}],["dto.imdbscore",{"_index":444,"title":{},"body":{"injectables/GameService.html":{}}}],["dto.name",{"_index":661,"title":{},"body":{"injectables/ProfileService.html":{}}}],["dto.password",{"_index":736,"title":{},"body":{"injectables/UserService.html":{}}}],["dto.price",{"_index":439,"title":{},"body":{"injectables/GameService.html":{}}}],["dto.title",{"_index":437,"title":{},"body":{"injectables/GameService.html":{}}}],["dto.traileryoutubeurl",{"_index":442,"title":{},"body":{"injectables/GameService.html":{}}}],["dto.userid",{"_index":662,"title":{},"body":{"injectables/ProfileService.html":{}}}],["dto.year",{"_index":440,"title":{},"body":{"injectables/GameService.html":{}}}],["dto/create",{"_index":380,"title":{},"body":{"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenreController.html":{},"injectables/GenreService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/login.dto",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/update",{"_index":382,"title":{},"body":{"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenreController.html":{},"injectables/GenreService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["e",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/GameService.html":{},"injectables/HomepageService.html":{}}}],["e2e",{"_index":841,"title":{},"body":{"index.html":{}}}],["editar",{"_index":372,"title":{},"body":{"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/ProfileController.html":{}}}],["efficient",{"_index":819,"title":{},"body":{"index.html":{}}}],["em",{"_index":419,"title":{},"body":{"injectables/GameService.html":{},"modules/PrismaModule.html":{}}}],["email",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["enableshutdownhooks",{"_index":596,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":598,"title":{},"body":{"injectables/PrismaService.html":{}}}],["encontrado",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["entidade",{"_index":433,"title":{},"body":{"injectables/GameService.html":{}}}],["entidades",{"_index":424,"title":{},"body":{"injectables/GameService.html":{}}}],["entities/game.entity",{"_index":383,"title":{},"body":{"controllers/GameController.html":{},"injectables/GameService.html":{}}}],["entities/genre.entity",{"_index":484,"title":{},"body":{"controllers/GenreController.html":{},"injectables/GenreService.html":{}}}],["entities/profile.entity",{"_index":657,"title":{},"body":{"injectables/ProfileService.html":{}}}],["entities/user.entity",{"_index":705,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["error",{"_index":811,"title":{},"body":{"miscellaneous/functions.html":{}}}],["error.util",{"_index":512,"title":{},"body":{"injectables/GenreService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["error.util.ts",{"_index":776,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["eslint",{"_index":27,"title":{},"body":{"controllers/AppController.html":{}}}],["est",{"_index":571,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["etc",{"_index":202,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["example",{"_index":200,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreateGenreDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["executioncontext",{"_index":885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exibir",{"_index":544,"title":{},"body":{"injectables/HomepageService.html":{}}}],["existe",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["existentes",{"_index":586,"title":{},"body":{"modules/PrismaModule.html":{}}}],["expiresin",{"_index":136,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateGameDto.html":{},"classes/CreateGenreDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"classes/Genre.html":{},"controllers/GenreController.html":{},"modules/GenreModule.html":{},"injectables/GenreService.html":{},"controllers/HomepageController.html":{},"modules/HomepageModule.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Profile.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/UpdateGameDto.html":{},"classes/UpdateGenreDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exportação",{"_index":588,"title":{},"body":{"modules/PrismaModule.html":{}}}],["exports",{"_index":582,"title":{},"body":{"modules/PrismaModule.html":{}}}],["express",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"dependencies.html":{}}}],["extends",{"_index":562,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/UpdateGameDto.html":{},"classes/UpdateGenreDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{}}}],["extractjwt",{"_index":559,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":566,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["f0d3c04423b5",{"_index":281,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["f7f45b19",{"_index":277,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["false",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["fantasia",{"_index":213,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["favgames",{"_index":549,"title":{},"body":{"injectables/HomepageService.html":{},"injectables/ProfileService.html":{}}}],["fazer",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateGameDto.html":{},"classes/CreateGenreDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"classes/Genre.html":{},"controllers/GenreController.html":{},"modules/GenreModule.html":{},"injectables/GenreService.html":{},"controllers/HomepageController.html":{},"modules/HomepageModule.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Profile.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/UpdateGameDto.html":{},"classes/UpdateGenreDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["findall",{"_index":347,"title":{},"body":{"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenreController.html":{},"injectables/GenreService.html":{},"controllers/HomepageController.html":{},"injectables/HomepageService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findall(@param('id",{"_index":529,"title":{},"body":{"controllers/HomepageController.html":{}}}],["findall(id",{"_index":523,"title":{},"body":{"controllers/HomepageController.html":{},"injectables/HomepageService.html":{}}}],["findbyid",{"_index":348,"title":{},"body":{"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenreController.html":{},"injectables/GenreService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findbyid(@param('id",{"_index":393,"title":{},"body":{"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["findbyid(id",{"_index":366,"title":{},"body":{"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenreController.html":{},"injectables/GenreService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["forcener",{"_index":500,"title":{},"body":{"modules/GenreModule.html":{}}}],["fraca",{"_index":326,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["fraca'})@apiproperty({description",{"_index":318,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["framework",{"_index":817,"title":{},"body":{"index.html":{}}}],["function",{"_index":772,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":807,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["ga",{"_index":209,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["game",{"_index":327,"title":{"classes/Game.html":{}},"body":{"classes/Game.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"injectables/HomepageService.html":{},"classes/Profile.html":{},"injectables/ProfileService.html":{},"coverage.html":{}}}],["game.controller",{"_index":409,"title":{},"body":{"modules/GameModule.html":{}}}],["game.dto",{"_index":381,"title":{},"body":{"controllers/GameController.html":{},"injectables/GameService.html":{},"classes/UpdateGameDto.html":{}}}],["game.dto.ts",{"_index":187,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/UpdateGameDto.html":{},"coverage.html":{}}}],["game.dto.ts:11",{"_index":235,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["game.dto.ts:17",{"_index":203,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["game.dto.ts:25",{"_index":214,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["game.dto.ts:35",{"_index":229,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["game.dto.ts:43",{"_index":242,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["game.dto.ts:50",{"_index":237,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["game.dto.ts:57",{"_index":210,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["game.dto.ts:64",{"_index":224,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["game.dto.ts:71",{"_index":218,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["game.service",{"_index":379,"title":{},"body":{"controllers/GameController.html":{},"modules/GameModule.html":{}}}],["game/game.module",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["gamechosen",{"_index":451,"title":{},"body":{"injectables/GameService.html":{}}}],["gamechosen.genre[0].genre",{"_index":455,"title":{},"body":{"injectables/GameService.html":{}}}],["gamecontroller",{"_index":344,"title":{"controllers/GameController.html":{}},"body":{"controllers/GameController.html":{},"modules/GameModule.html":{},"coverage.html":{}}}],["gameid",{"_index":264,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["gamemodule",{"_index":62,"title":{"modules/GameModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GameModule.html":{},"modules.html":{},"overview.html":{}}}],["gameplay",{"_index":207,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["gameplayyoutubeurl",{"_index":189,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/Game.html":{},"injectables/GameService.html":{}}}],["gameservice",{"_index":378,"title":{"injectables/GameService.html":{}},"body":{"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"coverage.html":{},"overview.html":{}}}],["garante",{"_index":604,"title":{},"body":{"injectables/PrismaService.html":{}}}],["genre",{"_index":256,"title":{"classes/Genre.html":{}},"body":{"classes/CreateGenreDto.html":{},"injectables/GameService.html":{},"classes/Genre.html":{},"controllers/GenreController.html":{},"injectables/GenreService.html":{},"injectables/HomepageService.html":{},"coverage.html":{}}}],["genre.controller",{"_index":498,"title":{},"body":{"modules/GenreModule.html":{}}}],["genre.dto",{"_index":480,"title":{},"body":{"controllers/GenreController.html":{},"injectables/GenreService.html":{},"classes/UpdateGenreDto.html":{}}}],["genre.dto.ts",{"_index":255,"title":{},"body":{"classes/CreateGenreDto.html":{},"classes/UpdateGenreDto.html":{},"coverage.html":{}}}],["genre.dto.ts:8",{"_index":260,"title":{},"body":{"classes/CreateGenreDto.html":{}}}],["genre.service",{"_index":482,"title":{},"body":{"controllers/GenreController.html":{},"modules/GenreModule.html":{}}}],["genre/genre.module",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["genrecontroller",{"_index":463,"title":{"controllers/GenreController.html":{}},"body":{"controllers/GenreController.html":{},"modules/GenreModule.html":{},"coverage.html":{}}}],["genremodule",{"_index":63,"title":{"modules/GenreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GenreModule.html":{},"modules.html":{},"overview.html":{}}}],["genrename",{"_index":190,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/Game.html":{}}}],["genreservice",{"_index":481,"title":{"injectables/GenreService.html":{}},"body":{"controllers/GenreController.html":{},"modules/GenreModule.html":{},"injectables/GenreService.html":{},"coverage.html":{},"overview.html":{}}}],["gerar",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{}}}],["get(':id",{"_index":392,"title":{},"body":{"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/HomepageController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["get(':id')@apioperation({summary",{"_index":367,"title":{},"body":{"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/ProfileController.html":{}}}],["get(':id')@useguards(undefined)@apibearerauth()@apioperation({summary",{"_index":697,"title":{},"body":{"controllers/UserController.html":{}}}],["get()@apioperation({summary",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/ProfileController.html":{}}}],["get()@useguards(undefined)@apibearerauth()@apioperation({summary",{"_index":694,"title":{},"body":{"controllers/UserController.html":{}}}],["get,httpcode,httpstatus,param,patch,post,useguards",{"_index":375,"title":{},"body":{"controllers/GameController.html":{}}}],["getappstatus",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getappstatus(@req",{"_index":45,"title":{},"body":{"controllers/AppController.html":{}}}],["getappstatus(baseurl",{"_index":85,"title":{},"body":{"injectables/AppService.html":{}}}],["getappstatus(req",{"_index":10,"title":{},"body":{"controllers/AppController.html":{}}}],["getting",{"_index":813,"title":{"index.html":{}},"body":{}}],["grow",{"_index":848,"title":{},"body":{"index.html":{}}}],["gênero",{"_index":212,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreateGenreDto.html":{},"controllers/GenreController.html":{},"injectables/HomepageService.html":{}}}],["gêneros",{"_index":470,"title":{},"body":{"controllers/GenreController.html":{},"injectables/HomepageService.html":{}}}],["handleerror",{"_index":510,"title":{},"body":{"injectables/GenreService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["handleerror(error",{"_index":810,"title":{},"body":{"miscellaneous/functions.html":{}}}],["here",{"_index":859,"title":{},"body":{"index.html":{}}}],["história",{"_index":201,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["homepage",{"_index":522,"title":{},"body":{"controllers/HomepageController.html":{}}}],["homepage.controller",{"_index":535,"title":{},"body":{"modules/HomepageModule.html":{}}}],["homepage.service",{"_index":526,"title":{},"body":{"controllers/HomepageController.html":{},"modules/HomepageModule.html":{}}}],["homepage/homepage.module",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["homepagecontroller",{"_index":520,"title":{"controllers/HomepageController.html":{}},"body":{"controllers/HomepageController.html":{},"modules/HomepageModule.html":{},"coverage.html":{}}}],["homepagemodule",{"_index":64,"title":{"modules/HomepageModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HomepageModule.html":{},"modules.html":{},"overview.html":{}}}],["homepageservice",{"_index":525,"title":{"injectables/HomepageService.html":{}},"body":{"controllers/HomepageController.html":{},"modules/HomepageModule.html":{},"injectables/HomepageService.html":{},"coverage.html":{},"overview.html":{}}}],["httpcode",{"_index":475,"title":{},"body":{"controllers/GenreController.html":{},"controllers/ProfileController.html":{}}}],["httpcode(httpstatus.no_content",{"_index":402,"title":{},"body":{"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["https",{"_index":268,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["https://avatars.githubusercontent.com/u/7906171",{"_index":305,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["https://m.media",{"_index":216,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["https://nestjs.com",{"_index":866,"title":{},"body":{"index.html":{}}}],["https://www.youtube.com/watch?v=l1x2sb3",{"_index":208,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["httpstatus",{"_index":476,"title":{},"body":{"controllers/GenreController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["id",{"_index":274,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"classes/Genre.html":{},"controllers/GenreController.html":{},"injectables/GenreService.html":{},"controllers/HomepageController.html":{},"injectables/HomepageService.html":{},"classes/Profile.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["id:id",{"_index":755,"title":{},"body":{"injectables/UserService.html":{}}}],["identifier",{"_index":758,"title":{},"body":{"coverage.html":{}}}],["if(validhash",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{}}}],["ignoreexpiration",{"_index":567,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["iguais",{"_index":742,"title":{},"body":{"injectables/UserService.html":{}}}],["igual",{"_index":292,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["image",{"_index":191,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/Game.html":{},"injectables/GameService.html":{},"injectables/HomepageService.html":{},"classes/Profile.html":{},"injectables/ProfileService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["imagem",{"_index":215,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{}}}],["imdb",{"_index":222,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["imdbscore",{"_index":192,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/Game.html":{},"injectables/GameService.html":{}}}],["implements",{"_index":603,"title":{},"body":{"injectables/PrismaService.html":{}}}],["import",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateGameDto.html":{},"classes/CreateGenreDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"controllers/GenreController.html":{},"modules/GenreModule.html":{},"injectables/GenreService.html":{},"controllers/HomepageController.html":{},"modules/HomepageModule.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Profile.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/UpdateGameDto.html":{},"classes/UpdateGenreDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/GenreModule.html":{},"modules/HomepageModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["include",{"_index":426,"title":{},"body":{"injectables/GameService.html":{},"injectables/ProfileService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateGameDto.html":{},"classes/CreateGenreDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"classes/Genre.html":{},"controllers/GenreController.html":{},"injectables/GenreService.html":{},"controllers/HomepageController.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"injectables/PrismaService.html":{},"classes/Profile.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":599,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateGameDto.html":{},"classes/CreateGenreDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"classes/Genre.html":{},"controllers/GenreController.html":{},"modules/GenreModule.html":{},"injectables/GenreService.html":{},"controllers/HomepageController.html":{},"modules/HomepageModule.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Profile.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/UpdateGameDto.html":{},"classes/UpdateGenreDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["informada",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{}}}],["informadas",{"_index":740,"title":{},"body":{"injectables/UserService.html":{}}}],["injectable",{"_index":82,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectable,notfoundexception",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{}}}],["injectables",{"_index":83,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["installation",{"_index":827,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":829,"title":{},"body":{"index.html":{}}}],["inválidas",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{}}}],["irão",{"_index":499,"title":{},"body":{"modules/GenreModule.html":{}}}],["isadmin",{"_index":288,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/HomepageService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["isemail",{"_index":320,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["isemail()@isstring()@isnotempty()@apiproperty({description",{"_index":300,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isnotempty",{"_index":321,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["isnumber",{"_index":244,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["isnumber()@apiproperty({description",{"_index":220,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["isnumber()@ispositive()@apiproperty({description",{"_index":238,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["isnumber({maxdecimalplaces",{"_index":225,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["ispositive",{"_index":245,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["isstring",{"_index":246,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["isstring()@apiproperty({description",{"_index":230,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreateProfileDto.html":{}}}],["isstring()@isnotempty()@apiproperty({description",{"_index":295,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["isstring()@isnotempty()@isemail()@apiproperty({description",{"_index":574,"title":{},"body":{"classes/LoginDto.html":{}}}],["isstring()@isuuid()@apiproperty({description",{"_index":211,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["isstring()@minlength(6)@matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":313,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isurl",{"_index":252,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{}}}],["isurl()@apiproperty({description",{"_index":204,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{}}}],["isurl,isuuid",{"_index":247,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["isuuid",{"_index":249,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["jogo",{"_index":199,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreateGenreDto.html":{},"controllers/GameController.html":{}}}],["jogos",{"_index":364,"title":{},"body":{"controllers/GameController.html":{},"injectables/HomepageService.html":{}}}],["join",{"_index":855,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":131,"title":{},"body":{"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/GenreModule.html":{},"modules/HomepageModule.html":{},"injectables/JwtStrategy.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":128,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtfromrequest",{"_index":565,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":124,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":132,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":143,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":120,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":863,"title":{},"body":{"index.html":{}}}],["lançamento",{"_index":240,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["license",{"_index":869,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":845,"title":{},"body":{"index.html":{}}}],["link",{"_index":205,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["listar",{"_index":361,"title":{},"body":{"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["literal",{"_index":555,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["local",{"_index":794,"title":{},"body":{"dependencies.html":{}}}],["loggeduser",{"_index":384,"title":{},"body":{"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{}}}],["login(@body",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(logindto",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logindto",{"_index":98,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["mail",{"_index":301,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matches",{"_index":322,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":325,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matching",{"_index":53,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateGameDto.html":{},"classes/CreateGenreDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"classes/Genre.html":{},"controllers/GenreController.html":{},"modules/GenreModule.html":{},"injectables/GenreService.html":{},"controllers/HomepageController.html":{},"modules/HomepageModule.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Profile.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/UpdateGameDto.html":{},"classes/UpdateGenreDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["maxdecimalplaces",{"_index":250,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["message",{"_index":316,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["metadata",{"_index":797,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenreController.html":{},"injectables/GenreService.html":{},"controllers/HomepageController.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["minlength",{"_index":323,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minlength(6",{"_index":324,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["miscellaneous",{"_index":806,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":844,"title":{},"body":{"index.html":{}}}],["mode",{"_index":834,"title":{},"body":{"index.html":{}}}],["module",{"_index":54,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/GenreModule.html":{},"modules/HomepageModule.html":{},"modules/PrismaModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/GenreModule.html":{},"modules/HomepageModule.html":{},"modules/PrismaModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["modules",{"_index":56,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/GenreModule.html":{},"modules/HomepageModule.html":{},"modules/PrismaModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":858,"title":{},"body":{"index.html":{}}}],["muito",{"_index":317,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["myśliwiec",{"_index":864,"title":{},"body":{"index.html":{}}}],["método",{"_index":432,"title":{},"body":{"injectables/GameService.html":{}}}],["módulos",{"_index":593,"title":{},"body":{"modules/PrismaModule.html":{}}}],["name",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenreController.html":{},"injectables/GenreService.html":{},"controllers/HomepageController.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/Profile.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["nest",{"_index":823,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":868,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"controllers/GenreController.html":{},"modules/GenreModule.html":{},"injectables/GenreService.html":{},"controllers/HomepageController.html":{},"modules/HomepageModule.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":781,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":125,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":666,"title":{},"body":{"classes/UpdateGameDto.html":{},"classes/UpdateGenreDto.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":127,"title":{},"body":{"modules/AuthModule.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"controllers/GenreController.html":{},"modules/GenreModule.html":{},"modules/HomepageModule.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":785,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateGameDto.html":{},"classes/CreateGenreDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/HomepageController.html":{},"classes/LoginDto.html":{},"controllers/ProfileController.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["new",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["nico",{"_index":310,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["node.js",{"_index":816,"title":{},"body":{"index.html":{}}}],["nome",{"_index":231,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{}}}],["notfoundexception",{"_index":417,"title":{},"body":{"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["notfoundexception('usuário",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{}}}],["notfoundexception(`registro",{"_index":430,"title":{},"body":{"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["novo",{"_index":466,"title":{},"body":{"controllers/GenreController.html":{},"controllers/ProfileController.html":{}}}],["npm",{"_index":828,"title":{},"body":{"index.html":{}}}],["number",{"_index":219,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/Game.html":{}}}],["não",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["o",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateProfileDto.html":{},"injectables/GameService.html":{},"modules/GenreModule.html":{},"injectables/GenreService.html":{},"injectables/HomepageService.html":{},"injectables/PrismaService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["object",{"_index":729,"title":{},"body":{"injectables/UserService.html":{}}}],["onmoduleinit",{"_index":597,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":846,"title":{},"body":{"index.html":{}}}],["optional",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateProfileDto.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"classes/Genre.html":{},"controllers/GenreController.html":{},"injectables/GenreService.html":{},"controllers/HomepageController.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/Profile.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["os",{"_index":363,"title":{},"body":{"controllers/GameController.html":{},"controllers/GenreController.html":{},"injectables/HomepageService.html":{},"modules/PrismaModule.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["ou",{"_index":570,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["out",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/GenreModule.html":{},"modules/HomepageModule.html":{},"modules/PrismaModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["outros",{"_index":592,"title":{},"body":{"modules/PrismaModule.html":{}}}],["overview",{"_index":873,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":779,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["para",{"_index":271,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"injectables/GameService.html":{}}}],["param",{"_index":477,"title":{},"body":{"controllers/GenreController.html":{},"controllers/HomepageController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["param('id",{"_index":399,"title":{},"body":{"controllers/GameController.html":{},"controllers/ProfileController.html":{}}}],["parameters",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenreController.html":{},"injectables/GenreService.html":{},"controllers/HomepageController.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["partial",{"_index":516,"title":{},"body":{"injectables/GenreService.html":{},"injectables/UserService.html":{}}}],["partialtype",{"_index":665,"title":{},"body":{"classes/UpdateGameDto.html":{},"classes/UpdateGenreDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(creategamedto",{"_index":668,"title":{},"body":{"classes/UpdateGameDto.html":{}}}],["partialtype(creategenredto",{"_index":670,"title":{},"body":{"classes/UpdateGenreDto.html":{}}}],["partialtype(createprofiledto",{"_index":672,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["partialtype(createuserdto",{"_index":676,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["passport",{"_index":561,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":126,"title":{},"body":{"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/GenreModule.html":{},"modules/HomepageModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["passportmodule.register",{"_index":129,"title":{},"body":{"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/GenreModule.html":{},"modules/HomepageModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["passportstrategy",{"_index":558,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":563,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["patch",{"_index":478,"title":{},"body":{"controllers/GenreController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["patch(':id",{"_index":397,"title":{},"body":{"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["patch(':id')@apioperation({summary",{"_index":371,"title":{},"body":{"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/ProfileController.html":{}}}],["patch(':id')@useguards(undefined)@apibearerauth()@apioperation({summary",{"_index":699,"title":{},"body":{"controllers/UserController.html":{}}}],["payload",{"_index":557,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.email",{"_index":569,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pelo",{"_index":358,"title":{},"body":{"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["perfil",{"_index":267,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"injectables/HomepageService.html":{},"controllers/ProfileController.html":{}}}],["perfis",{"_index":628,"title":{},"body":{"controllers/ProfileController.html":{}}}],["please",{"_index":856,"title":{},"body":{"index.html":{}}}],["possível",{"_index":749,"title":{},"body":{"injectables/UserService.html":{}}}],["post",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["post()@apioperation({description",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{}}}],["post()@apioperation({summary",{"_index":351,"title":{},"body":{"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["precisarão",{"_index":590,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prefix",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/HomepageController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["prettier/prettier",{"_index":29,"title":{},"body":{"controllers/AppController.html":{}}}],["preço",{"_index":227,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["price",{"_index":193,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/Game.html":{},"injectables/GameService.html":{}}}],["prisma",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["prisma.gamecreateinput",{"_index":436,"title":{},"body":{"injectables/GameService.html":{}}}],["prisma.gameupdateinput",{"_index":453,"title":{},"body":{"injectables/GameService.html":{}}}],["prisma.service",{"_index":583,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":418,"title":{},"body":{"injectables/GameService.html":{},"injectables/PrismaService.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"modules/GameModule.html":{}}}],["prismaclient",{"_index":595,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismamodule",{"_index":65,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/GenreModule.html":{},"modules/HomepageModule.html":{},"modules/PrismaModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":142,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["process.env.jwt_secret",{"_index":134,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["procura",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{}}}],["production",{"_index":836,"title":{},"body":{"index.html":{}}}],["profile",{"_index":612,"title":{"classes/Profile.html":{}},"body":{"classes/Profile.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"coverage.html":{}}}],["profile.controller",{"_index":647,"title":{},"body":{"modules/ProfileModule.html":{}}}],["profile.dto",{"_index":635,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/UpdateProfileDto.html":{}}}],["profile.dto.ts",{"_index":263,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/UpdateProfileDto.html":{},"coverage.html":{}}}],["profile.dto.ts:10",{"_index":273,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["profile.dto.ts:17",{"_index":282,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["profile.dto.ts:24",{"_index":269,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["profile.dto.ts:26",{"_index":266,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["profile.service",{"_index":634,"title":{},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{}}}],["profile/profile.module",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["profilecontroller",{"_index":622,"title":{"controllers/ProfileController.html":{}},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"coverage.html":{}}}],["profiledata",{"_index":539,"title":{},"body":{"injectables/HomepageService.html":{}}}],["profilemodule",{"_index":66,"title":{"modules/ProfileModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["profileservice",{"_index":633,"title":{"injectables/ProfileService.html":{}},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"coverage.html":{},"overview.html":{}}}],["progressive",{"_index":815,"title":{},"body":{"index.html":{}}}],["project",{"_index":847,"title":{},"body":{"index.html":{}}}],["promise",{"_index":354,"title":{},"body":{"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenreController.html":{},"injectables/GenreService.html":{}}}],["properties",{"_index":188,"title":{"properties.html":{}},"body":{"classes/CreateGameDto.html":{},"classes/CreateGenreDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/Game.html":{},"classes/Genre.html":{},"classes/LoginDto.html":{},"classes/Profile.html":{},"classes/User.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["provedores",{"_index":585,"title":{},"body":{"modules/PrismaModule.html":{}}}],["providers",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/GenreModule.html":{},"modules/HomepageModule.html":{},"modules/PrismaModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["que",{"_index":589,"title":{},"body":{"modules/PrismaModule.html":{},"injectables/PrismaService.html":{}}}],["read",{"_index":857,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenreController.html":{},"injectables/GenreService.html":{},"controllers/HomepageController.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["realiza",{"_index":587,"title":{},"body":{"modules/PrismaModule.html":{}}}],["record",{"_index":428,"title":{},"body":{"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/ProfileService.html":{}}}],["reflect",{"_index":796,"title":{},"body":{"dependencies.html":{}}}],["registrar",{"_index":465,"title":{},"body":{"controllers/GenreController.html":{}}}],["remover",{"_index":357,"title":{},"body":{"controllers/GameController.html":{},"controllers/GenreController.html":{}}}],["repository",{"_index":826,"title":{},"body":{"index.html":{}}}],["req",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["req.get('host",{"_index":49,"title":{},"body":{"controllers/AppController.html":{}}}],["req.protocol",{"_index":48,"title":{},"body":{"controllers/AppController.html":{}}}],["request",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"miscellaneous/variables.html":{}}}],["request.user",{"_index":887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/GenreModule.html":{},"modules/HomepageModule.html":{},"modules/PrismaModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["respectivo",{"_index":548,"title":{},"body":{"injectables/HomepageService.html":{}}}],["responsável",{"_index":542,"title":{},"body":{"injectables/HomepageService.html":{}}}],["results",{"_index":52,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateGameDto.html":{},"classes/CreateGenreDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"classes/Genre.html":{},"controllers/GenreController.html":{},"modules/GenreModule.html":{},"injectables/GenreService.html":{},"controllers/HomepageController.html":{},"modules/HomepageModule.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Profile.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/UpdateGameDto.html":{},"classes/UpdateGenreDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":50,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenreController.html":{},"injectables/GenreService.html":{},"controllers/HomepageController.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenreController.html":{},"injectables/GenreService.html":{},"controllers/HomepageController.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["rimraf",{"_index":799,"title":{},"body":{"dependencies.html":{}}}],["rpg",{"_index":259,"title":{},"body":{"classes/CreateGenreDto.html":{}}}],["run",{"_index":831,"title":{},"body":{"index.html":{}}}],["running",{"_index":90,"title":{},"body":{"injectables/AppService.html":{}}}],["rxjs",{"_index":801,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":820,"title":{},"body":{"index.html":{}}}],["score",{"_index":221,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["se",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{}}}],["secret",{"_index":133,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":568,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["selecionar",{"_index":541,"title":{},"body":{"injectables/HomepageService.html":{}}}],["select",{"_index":543,"title":{},"body":{"injectables/HomepageService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["senha",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["senhas",{"_index":739,"title":{},"body":{"injectables/UserService.html":{}}}],["senhor",{"_index":232,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["ser",{"_index":291,"title":{},"body":{"classes/CreateUserDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{}}}],["server",{"_index":89,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["seu",{"_index":468,"title":{},"body":{"controllers/GenreController.html":{},"injectables/HomepageService.html":{},"controllers/UserController.html":{}}}],["side",{"_index":821,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":135,"title":{},"body":{"modules/AuthModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateGameDto.html":{},"classes/CreateGenreDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"classes/Genre.html":{},"controllers/GenreController.html":{},"modules/GenreModule.html":{},"injectables/GenreService.html":{},"controllers/HomepageController.html":{},"modules/HomepageModule.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Profile.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/UpdateGameDto.html":{},"classes/UpdateGenreDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["sponsors",{"_index":850,"title":{},"body":{"index.html":{}}}],["src/.../handle",{"_index":809,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../logged",{"_index":882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":808,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:17",{"_index":20,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":84,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":87,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:16",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":121,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":138,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:13",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:8",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/login.dto.ts",{"_index":573,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts:12",{"_index":576,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/login.dto.ts:20",{"_index":577,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":551,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:16",{"_index":556,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:7",{"_index":553,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/logged",{"_index":385,"title":{},"body":{"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/game/dto/create",{"_index":186,"title":{},"body":{"classes/CreateGameDto.html":{},"coverage.html":{}}}],["src/game/dto/update",{"_index":664,"title":{},"body":{"classes/UpdateGameDto.html":{},"coverage.html":{}}}],["src/game/entities/game.entity",{"_index":621,"title":{},"body":{"classes/Profile.html":{}}}],["src/game/entities/game.entity.ts",{"_index":328,"title":{},"body":{"classes/Game.html":{},"coverage.html":{}}}],["src/game/entities/game.entity.ts:10",{"_index":335,"title":{},"body":{"classes/Game.html":{}}}],["src/game/entities/game.entity.ts:11",{"_index":338,"title":{},"body":{"classes/Game.html":{}}}],["src/game/entities/game.entity.ts:12",{"_index":332,"title":{},"body":{"classes/Game.html":{}}}],["src/game/entities/game.entity.ts:13",{"_index":342,"title":{},"body":{"classes/Game.html":{}}}],["src/game/entities/game.entity.ts:2",{"_index":336,"title":{},"body":{"classes/Game.html":{}}}],["src/game/entities/game.entity.ts:3",{"_index":340,"title":{},"body":{"classes/Game.html":{}}}],["src/game/entities/game.entity.ts:4",{"_index":333,"title":{},"body":{"classes/Game.html":{}}}],["src/game/entities/game.entity.ts:5",{"_index":339,"title":{},"body":{"classes/Game.html":{}}}],["src/game/entities/game.entity.ts:6",{"_index":343,"title":{},"body":{"classes/Game.html":{}}}],["src/game/entities/game.entity.ts:7",{"_index":337,"title":{},"body":{"classes/Game.html":{}}}],["src/game/entities/game.entity.ts:8",{"_index":341,"title":{},"body":{"classes/Game.html":{}}}],["src/game/entities/game.entity.ts:9",{"_index":334,"title":{},"body":{"classes/Game.html":{}}}],["src/game/game.controller.ts",{"_index":345,"title":{},"body":{"controllers/GameController.html":{},"coverage.html":{}}}],["src/game/game.controller.ts:24",{"_index":365,"title":{},"body":{"controllers/GameController.html":{}}}],["src/game/game.controller.ts:32",{"_index":368,"title":{},"body":{"controllers/GameController.html":{}}}],["src/game/game.controller.ts:40",{"_index":353,"title":{},"body":{"controllers/GameController.html":{}}}],["src/game/game.controller.ts:48",{"_index":373,"title":{},"body":{"controllers/GameController.html":{}}}],["src/game/game.controller.ts:57",{"_index":359,"title":{},"body":{"controllers/GameController.html":{}}}],["src/game/game.module.ts",{"_index":408,"title":{},"body":{"modules/GameModule.html":{}}}],["src/game/game.service.ts",{"_index":410,"title":{},"body":{"injectables/GameService.html":{},"coverage.html":{}}}],["src/game/game.service.ts:108",{"_index":413,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/game.service.ts:16",{"_index":411,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/game.service.ts:20",{"_index":414,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/game.service.ts:28",{"_index":415,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/game.service.ts:44",{"_index":412,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/game.service.ts:73",{"_index":416,"title":{},"body":{"injectables/GameService.html":{}}}],["src/genre/dto/create",{"_index":254,"title":{},"body":{"classes/CreateGenreDto.html":{},"coverage.html":{}}}],["src/genre/dto/update",{"_index":669,"title":{},"body":{"classes/UpdateGenreDto.html":{},"coverage.html":{}}}],["src/genre/entities/genre.entity.ts",{"_index":458,"title":{},"body":{"classes/Genre.html":{},"coverage.html":{}}}],["src/genre/entities/genre.entity.ts:2",{"_index":461,"title":{},"body":{"classes/Genre.html":{}}}],["src/genre/entities/genre.entity.ts:3",{"_index":460,"title":{},"body":{"classes/Genre.html":{}}}],["src/genre/entities/genre.entity.ts:4",{"_index":459,"title":{},"body":{"classes/Genre.html":{}}}],["src/genre/entities/genre.entity.ts:5",{"_index":462,"title":{},"body":{"classes/Genre.html":{}}}],["src/genre/genre.controller.ts",{"_index":464,"title":{},"body":{"controllers/GenreController.html":{},"coverage.html":{}}}],["src/genre/genre.controller.ts:34",{"_index":471,"title":{},"body":{"controllers/GenreController.html":{}}}],["src/genre/genre.controller.ts:42",{"_index":472,"title":{},"body":{"controllers/GenreController.html":{}}}],["src/genre/genre.controller.ts:50",{"_index":467,"title":{},"body":{"controllers/GenreController.html":{}}}],["src/genre/genre.controller.ts:58",{"_index":474,"title":{},"body":{"controllers/GenreController.html":{}}}],["src/genre/genre.controller.ts:67",{"_index":469,"title":{},"body":{"controllers/GenreController.html":{}}}],["src/genre/genre.module.ts",{"_index":497,"title":{},"body":{"modules/GenreModule.html":{}}}],["src/genre/genre.service.ts",{"_index":502,"title":{},"body":{"injectables/GenreService.html":{},"coverage.html":{}}}],["src/genre/genre.service.ts:14",{"_index":503,"title":{},"body":{"injectables/GenreService.html":{}}}],["src/genre/genre.service.ts:17",{"_index":506,"title":{},"body":{"injectables/GenreService.html":{}}}],["src/genre/genre.service.ts:21",{"_index":507,"title":{},"body":{"injectables/GenreService.html":{}}}],["src/genre/genre.service.ts:29",{"_index":504,"title":{},"body":{"injectables/GenreService.html":{}}}],["src/genre/genre.service.ts:40",{"_index":509,"title":{},"body":{"injectables/GenreService.html":{}}}],["src/genre/genre.service.ts:55",{"_index":505,"title":{},"body":{"injectables/GenreService.html":{}}}],["src/homepage/homepage.controller.ts",{"_index":521,"title":{},"body":{"controllers/HomepageController.html":{},"coverage.html":{}}}],["src/homepage/homepage.controller.ts:11",{"_index":524,"title":{},"body":{"controllers/HomepageController.html":{}}}],["src/homepage/homepage.module.ts",{"_index":534,"title":{},"body":{"modules/HomepageModule.html":{}}}],["src/homepage/homepage.service.ts",{"_index":536,"title":{},"body":{"injectables/HomepageService.html":{},"coverage.html":{}}}],["src/homepage/homepage.service.ts:5",{"_index":537,"title":{},"body":{"injectables/HomepageService.html":{}}}],["src/homepage/homepage.service.ts:8",{"_index":538,"title":{},"body":{"injectables/HomepageService.html":{}}}],["src/main.ts",{"_index":771,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/prisma/prisma.module",{"_index":123,"title":{},"body":{"modules/AuthModule.html":{},"modules/GenreModule.html":{},"modules/HomepageModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{}}}],["src/prisma/prisma.module.ts",{"_index":581,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["src/prisma/prisma.service.ts",{"_index":594,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:13",{"_index":600,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:8",{"_index":602,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/profile/dto/create",{"_index":262,"title":{},"body":{"classes/CreateProfileDto.html":{},"coverage.html":{}}}],["src/profile/dto/update",{"_index":671,"title":{},"body":{"classes/UpdateProfileDto.html":{},"coverage.html":{}}}],["src/profile/entities/profile.entity.ts",{"_index":613,"title":{},"body":{"classes/Profile.html":{},"coverage.html":{}}}],["src/profile/entities/profile.entity.ts:10",{"_index":614,"title":{},"body":{"classes/Profile.html":{}}}],["src/profile/entities/profile.entity.ts:11",{"_index":619,"title":{},"body":{"classes/Profile.html":{}}}],["src/profile/entities/profile.entity.ts:5",{"_index":616,"title":{},"body":{"classes/Profile.html":{}}}],["src/profile/entities/profile.entity.ts:6",{"_index":618,"title":{},"body":{"classes/Profile.html":{}}}],["src/profile/entities/profile.entity.ts:7",{"_index":617,"title":{},"body":{"classes/Profile.html":{}}}],["src/profile/entities/profile.entity.ts:8",{"_index":620,"title":{},"body":{"classes/Profile.html":{}}}],["src/profile/entities/profile.entity.ts:9",{"_index":615,"title":{},"body":{"classes/Profile.html":{}}}],["src/profile/profile.controller.ts",{"_index":623,"title":{},"body":{"controllers/ProfileController.html":{},"coverage.html":{}}}],["src/profile/profile.controller.ts:32",{"_index":629,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/profile/profile.controller.ts:40",{"_index":630,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/profile/profile.controller.ts:48",{"_index":625,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/profile/profile.controller.ts:56",{"_index":632,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/profile/profile.controller.ts:69",{"_index":627,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/profile/profile.module.ts",{"_index":646,"title":{},"body":{"modules/ProfileModule.html":{}}}],["src/profile/profile.service.ts",{"_index":648,"title":{},"body":{"injectables/ProfileService.html":{},"coverage.html":{}}}],["src/profile/profile.service.ts:119",{"_index":652,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/profile/profile.service.ts:14",{"_index":649,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/profile/profile.service.ts:17",{"_index":653,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/profile/profile.service.ts:35",{"_index":654,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/profile/profile.service.ts:49",{"_index":651,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/profile/profile.service.ts:85",{"_index":656,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/user/dto/create",{"_index":284,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/user/dto/update",{"_index":674,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/user/entities/user.entity",{"_index":387,"title":{},"body":{"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenreController.html":{},"injectables/GenreService.html":{},"classes/Profile.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{}}}],["src/user/entities/user.entity.ts",{"_index":677,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/user/entities/user.entity.ts:10",{"_index":686,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:2",{"_index":681,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:3",{"_index":683,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:4",{"_index":684,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:5",{"_index":678,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:6",{"_index":680,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:7",{"_index":685,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:8",{"_index":682,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:9",{"_index":679,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.controller.ts",{"_index":688,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:19",{"_index":690,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:30",{"_index":696,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:41",{"_index":698,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:51",{"_index":701,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:62",{"_index":693,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module.ts",{"_index":718,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":720,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:17",{"_index":722,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:20",{"_index":732,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:32",{"_index":726,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:38",{"_index":727,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:49",{"_index":724,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:66",{"_index":728,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:97",{"_index":725,"title":{},"body":{"injectables/UserService.html":{}}}],["src/utils/handle",{"_index":511,"title":{},"body":{"injectables/GenreService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":832,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":835,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":837,"title":{},"body":{"index.html":{}}}],["started",{"_index":814,"title":{"index.html":{}},"body":{}}],["starter",{"_index":825,"title":{},"body":{"index.html":{}}}],["statements",{"_index":759,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["stay",{"_index":860,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":560,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":86,"title":{},"body":{"injectables/AppService.html":{},"classes/CreateGameDto.html":{},"classes/CreateGenreDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"classes/Genre.html":{},"controllers/GenreController.html":{},"injectables/GenreService.html":{},"controllers/HomepageController.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/Profile.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["summary",{"_index":44,"title":{},"body":{"controllers/AppController.html":{},"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["super",{"_index":564,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":851,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":871,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":803,"title":{},"body":{"dependencies.html":{}}}],["são",{"_index":741,"title":{},"body":{"injectables/UserService.html":{}}}],["table",{"_index":778,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":777,"title":{},"body":{"coverage.html":{}}}],["tatianagandra",{"_index":311,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["tatianagandra123",{"_index":272,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["tatianagandra78@gmail.com",{"_index":303,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["test",{"_index":840,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":843,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":842,"title":{},"body":{"index.html":{}}}],["tests",{"_index":839,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":849,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":606,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on(\"beforeexit",{"_index":610,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.getappstatus(baseurl",{"_index":51,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(logindto",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.findbyid(id",{"_index":452,"title":{},"body":{"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["this.gameservice.create(user",{"_index":396,"title":{},"body":{"controllers/GameController.html":{}}}],["this.gameservice.delete(user",{"_index":404,"title":{},"body":{"controllers/GameController.html":{}}}],["this.gameservice.findall",{"_index":391,"title":{},"body":{"controllers/GameController.html":{}}}],["this.gameservice.findbyid(id",{"_index":394,"title":{},"body":{"controllers/GameController.html":{}}}],["this.gameservice.update(user",{"_index":400,"title":{},"body":{"controllers/GameController.html":{}}}],["this.genreservice.create",{"_index":489,"title":{},"body":{"controllers/GenreController.html":{}}}],["this.genreservice.delete(user",{"_index":493,"title":{},"body":{"controllers/GenreController.html":{}}}],["this.genreservice.findall",{"_index":487,"title":{},"body":{"controllers/GenreController.html":{}}}],["this.genreservice.findbyid(id",{"_index":488,"title":{},"body":{"controllers/GenreController.html":{}}}],["this.genreservice.update(id",{"_index":491,"title":{},"body":{"controllers/GenreController.html":{}}}],["this.homepageservice.findall(id",{"_index":530,"title":{},"body":{"controllers/HomepageController.html":{}}}],["this.isadmin",{"_index":746,"title":{},"body":{"injectables/UserService.html":{}}}],["this.jwtservice.sign",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.game.create",{"_index":447,"title":{},"body":{"injectables/GameService.html":{}}}],["this.prisma.game.delete",{"_index":457,"title":{},"body":{"injectables/GameService.html":{}}}],["this.prisma.game.findmany",{"_index":425,"title":{},"body":{"injectables/GameService.html":{}}}],["this.prisma.game.findunique",{"_index":429,"title":{},"body":{"injectables/GameService.html":{}}}],["this.prisma.game.update",{"_index":456,"title":{},"body":{"injectables/GameService.html":{}}}],["this.prisma.genre",{"_index":517,"title":{},"body":{"injectables/GenreService.html":{}}}],["this.prisma.genre.create",{"_index":515,"title":{},"body":{"injectables/GenreService.html":{}}}],["this.prisma.genre.delete",{"_index":519,"title":{},"body":{"injectables/GenreService.html":{}}}],["this.prisma.genre.findmany",{"_index":513,"title":{},"body":{"injectables/GenreService.html":{},"injectables/HomepageService.html":{}}}],["this.prisma.genre.findunique",{"_index":514,"title":{},"body":{"injectables/GenreService.html":{}}}],["this.prisma.profile",{"_index":660,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.prisma.profile.delete",{"_index":663,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.prisma.profile.findmany",{"_index":658,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.prisma.profile.findunique",{"_index":540,"title":{},"body":{"injectables/HomepageService.html":{},"injectables/ProfileService.html":{}}}],["this.prisma.user",{"_index":745,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.delete",{"_index":754,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.findmany",{"_index":734,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.findunique",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["this.prisma.user.update",{"_index":753,"title":{},"body":{"injectables/UserService.html":{}}}],["this.profileservice.create(user.id",{"_index":640,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.delete(user",{"_index":642,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.findall",{"_index":638,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.findbyid(id",{"_index":639,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.profileservice.update(user.id",{"_index":641,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.userselect",{"_index":735,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.create(createuserdto",{"_index":709,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.delete(id",{"_index":714,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findall",{"_index":710,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findbyid(id",{"_index":711,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.update(user",{"_index":712,"title":{},"body":{"controllers/UserController.html":{}}}],["throw",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["title",{"_index":194,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/Game.html":{},"injectables/GameService.html":{},"injectables/HomepageService.html":{},"injectables/ProfileService.html":{}}}],["todos",{"_index":362,"title":{},"body":{"controllers/GameController.html":{},"controllers/GenreController.html":{},"injectables/HomepageService.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["token",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["touch",{"_index":861,"title":{},"body":{"index.html":{}}}],["trailer",{"_index":236,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["traileryoutubeurl",{"_index":195,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/Game.html":{},"injectables/GameService.html":{}}}],["transformer",{"_index":789,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":427,"title":{},"body":{"injectables/GameService.html":{},"injectables/HomepageService.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["twitter",{"_index":867,"title":{},"body":{"index.html":{}}}],["type",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateGameDto.html":{},"classes/CreateGenreDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"classes/Genre.html":{},"controllers/GenreController.html":{},"injectables/GenreService.html":{},"controllers/HomepageController.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"injectables/PrismaService.html":{},"classes/Profile.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["types",{"_index":667,"title":{},"body":{"classes/UpdateGameDto.html":{},"classes/UpdateGenreDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":824,"title":{},"body":{"index.html":{}}}],["ui",{"_index":804,"title":{},"body":{"dependencies.html":{}}}],["um",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["uma",{"_index":422,"title":{},"body":{"injectables/GameService.html":{}}}],["unauthorizedexception",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["unauthorizedexception('credenciais",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":812,"title":{},"body":{"miscellaneous/functions.html":{}}}],["unit",{"_index":838,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProfileService.html":{},"injectables/UserService.html":{}}}],["unlicensed",{"_index":880,"title":{},"body":{"properties.html":{}}}],["update",{"_index":349,"title":{},"body":{"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenreController.html":{},"injectables/GenreService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["update(@loggeduser",{"_index":398,"title":{},"body":{"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/UserController.html":{}}}],["update(id",{"_index":508,"title":{},"body":{"injectables/GenreService.html":{}}}],["update(user",{"_index":369,"title":{},"body":{"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenreController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["update(userid",{"_index":655,"title":{},"body":{"injectables/ProfileService.html":{}}}],["updatedat",{"_index":330,"title":{},"body":{"classes/Game.html":{},"classes/Genre.html":{},"classes/Profile.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["updategamedto",{"_index":370,"title":{"classes/UpdateGameDto.html":{}},"body":{"controllers/GameController.html":{},"injectables/GameService.html":{},"classes/UpdateGameDto.html":{},"coverage.html":{}}}],["updategenredto",{"_index":473,"title":{"classes/UpdateGenreDto.html":{}},"body":{"controllers/GenreController.html":{},"injectables/GenreService.html":{},"classes/UpdateGenreDto.html":{},"coverage.html":{}}}],["updateprofiledto",{"_index":631,"title":{"classes/UpdateProfileDto.html":{}},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/UpdateProfileDto.html":{},"coverage.html":{}}}],["updateuserdto",{"_index":673,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["usado",{"_index":270,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["usando",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{}}}],["useguards",{"_index":479,"title":{},"body":{"controllers/GenreController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["useguards(authguard",{"_index":389,"title":{},"body":{"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["user",{"_index":159,"title":{"classes/User.html":{}},"body":{"injectables/AuthService.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenreController.html":{},"injectables/GenreService.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"classes/Profile.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user,@param('id",{"_index":490,"title":{},"body":{"controllers/GenreController.html":{},"controllers/UserController.html":{}}}],["user.controller",{"_index":719,"title":{},"body":{"modules/UserModule.html":{}}}],["user.decorator",{"_index":386,"title":{},"body":{"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/ProfileController.html":{},"controllers/UserController.html":{}}}],["user.decorator.ts",{"_index":763,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto",{"_index":675,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":285,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:18",{"_index":312,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:26",{"_index":299,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:35",{"_index":304,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:46",{"_index":319,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:52",{"_index":294,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:59",{"_index":306,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:60",{"_index":308,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.isadmin",{"_index":434,"title":{},"body":{"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/ProfileService.html":{}}}],["user.password",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["user.service",{"_index":704,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user/user.module",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["usercontroller",{"_index":687,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userid",{"_index":265,"title":{},"body":{"classes/CreateProfileDto.html":{},"injectables/ProfileService.html":{}}}],["usermodule",{"_index":67,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["userselect",{"_index":721,"title":{},"body":{"injectables/UserService.html":{}}}],["userservice",{"_index":703,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["usuario",{"_index":296,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["usuário",{"_index":275,"title":{},"body":{"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"injectables/GameService.html":{},"injectables/GenreService.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"injectables/ProfileService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["usuários",{"_index":695,"title":{},"body":{"controllers/UserController.html":{}}}],["utilizado",{"_index":309,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["utilizados",{"_index":591,"title":{},"body":{"modules/PrismaModule.html":{}}}],["valida",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{}}}],["validate",{"_index":552,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":554,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validator",{"_index":248,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"dependencies.html":{}}}],["validhash",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{}}}],["value",{"_index":731,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":764,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":881,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":878,"title":{},"body":{"properties.html":{}}}],["visualizar",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"controllers/GameController.html":{},"controllers/GenreController.html":{},"controllers/ProfileController.html":{}}}],["void",{"_index":360,"title":{},"body":{"controllers/GameController.html":{},"controllers/GenreController.html":{}}}],["watch",{"_index":833,"title":{},"body":{"index.html":{}}}],["website",{"_index":865,"title":{},"body":{"index.html":{}}}],["year",{"_index":196,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/Game.html":{},"injectables/GameService.html":{}}}],["you'd",{"_index":854,"title":{},"body":{"index.html":{}}}],["z",{"_index":315,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["z])(?=.*[a",{"_index":314,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["zoom",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/GenreModule.html":{},"modules/HomepageModule.html":{},"modules/PrismaModule.html":{},"modules/ProfileModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAppStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAppStatus\n                        \n                    \n                \n            \n            \n                \ngetAppStatus(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Visualizar status da aplicação'})\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport {Controller,Get,Req} from '@nestjs/common';\nimport { ApiOperation,ApiTags } from '@nestjs/swagger';\nimport { AppService } from './app.service';\nimport { Request } from 'express';\n\n@ApiTags('status')\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  @ApiOperation({\n    summary: 'Visualizar status da aplicação',\n  })\n\n  getAppStatus(@Req() req: Request) {\n    const baseUrl = req.protocol + '://' + req.get('host');\n    return this.appService.getAppStatus(baseUrl);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nGameModule\n\nGameModule\n\nAppModule -->\n\nGameModule->AppModule\n\n\n\n\n\nGenreModule\n\nGenreModule\n\nAppModule -->\n\nGenreModule->AppModule\n\n\n\n\n\nHomepageModule\n\nHomepageModule\n\nAppModule -->\n\nHomepageModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            GameModule\n                        \n                        \n                            GenreModule\n                        \n                        \n                            HomepageModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            ProfileModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { GameModule } from './game/game.module';\nimport { GenreModule } from './genre/genre.module';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { ProfileModule } from './profile/profile.module';\nimport { UserModule } from './user/user.module';\nimport { AuthModule } from './auth/auth.module';\nimport { HomepageModule } from './homepage/homepage.module';\n\n@Module({\n  imports: [\n    GameModule,\n    GenreModule,\n    PrismaModule,\n    UserModule,\n    ProfileModule,\n    AuthModule,\n    HomepageModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAppStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAppStatus\n                        \n                    \n                \n            \n            \n                \ngetAppStatus(baseUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    baseUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { status: string; docs: string; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getAppStatus(baseUrl: string) {\n    return {\n      status: 'Server is running! 🚀',\n      docs: baseUrl + '/api',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(loginDto: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({description: 'Fazer login e gerar um token'})\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post } from '@nestjs/common';\nimport { ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { AuthService } from './auth.service';\nimport { LoginDto} from './dto/login.dto';\n\n@ApiTags('auth')\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @Post()\n  @ApiOperation({\n    description: 'Fazer login e gerar um token',\n  })\n\n  login(@Body() loginDto: LoginDto) {\n    return this.authService.login(loginDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtStrategy } from './jwt.strategy';\n\n@Module({\n  imports: [\n    PrismaModule,\n    PassportModule.register({ defaultStrategy: 'jwt' }),\n    JwtModule.register({\n      secret: process.env.JWT_SECRET,\n      signOptions: { expiresIn: '24h' },\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(loginDto: LoginDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable,NotFoundException, UnauthorizedException } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport * as bcrypt from 'bcrypt';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { LoginDto } from './dto/login.dto';\n\n@Injectable()\nexport class AuthService {\n  constructor(private readonly prisma: PrismaService,\n    private readonly jwtService: JwtService,\n  ) {}\n\n  async login(loginDto: LoginDto) {\n    const { email, password } = loginDto;\n\n    // Procura e checa se o user existe, usando o email\n    const user = await this.prisma.user.findUnique({ where: { email },\n     });\n\n    if (!user) {\n      throw new NotFoundException('Usuário não encontrado');\n    }\n\n    // Valida se a senha informada é correta\n    const validHash = await bcrypt.compare(password /* SENHA DO DTO */, user.password /*SENHA DO BANCO  */ );\n\n    if(validHash === false){\n      throw new UnauthorizedException('Credenciais inválidas')\n    }\n\n    delete user.password;\n\n    return {\n      token: this.jwtService.sign({ email }),\n      user,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateGameDto.html":{"url":"classes/CreateGameDto.html","title":"class - CreateGameDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateGameDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/dto/create-game.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                GameplayYouTubeUrl\n                            \n                            \n                                genreName\n                            \n                            \n                                image\n                            \n                            \n                                ImdbScore\n                            \n                            \n                                price\n                            \n                            \n                                title\n                            \n                            \n                                TrailerYouTubeUrl\n                            \n                            \n                                year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Descrição do jogo', example: 'História, etc.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/game/dto/create-game.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GameplayYouTubeUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUrl()@ApiProperty({description: 'Link de gameplay do jogo', example: 'https://www.youtube.com/watch?v=l1x2SB3--gA'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/game/dto/create-game.dto.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        genreName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsUUID()@ApiProperty({description: 'Gênero do jogo', example: 'Fantasia'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/game/dto/create-game.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUrl()@ApiProperty({description: 'Imagem do jogo', example: 'https://m.media-amazon.com/images/I/71RTZKIq4bL._AC_SX342_.jpg'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/game/dto/create-game.dto.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ImdbScore\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({description: 'Score do jogo no Imdb', example: '5'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/game/dto/create-game.dto.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber({maxDecimalPlaces: 2})@IsPositive()@ApiProperty({description: 'Preço do jogo', example: '199.00'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/game/dto/create-game.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Nome do jogo', example: 'Senhor dos aneis'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/game/dto/create-game.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TrailerYouTubeUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUrl()@ApiProperty({description: 'Link do trailer do jogo', example: 'https://www.youtube.com/watch?v=l1x2SB3--gA'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/game/dto/create-game.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        year\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsPositive()@ApiProperty({description: 'Ano de lançamento do jogo', example: '2017'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/game/dto/create-game.dto.ts:43\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {  IsNumber, IsPositive, IsString, IsUrl,IsUUID } from 'class-validator';\n\nexport class CreateGameDto{\n  @IsString()\n  @ApiProperty({\n    description: 'Nome do jogo',\n    example: 'Senhor dos aneis',\n  })\n  title: string;\n\n  @ApiProperty({\n    description: 'Descrição do jogo',\n    example: 'História, etc.',\n  })\n  description: string;\n\n  @IsString()\n  @IsUUID()\n  @ApiProperty({\n    description: 'Gênero do jogo',\n    example: 'Fantasia',\n  })\n  genreName: string;\n\n  @IsNumber({\n    maxDecimalPlaces: 2,\n  })\n  @IsPositive()\n  @ApiProperty({\n    description: 'Preço do jogo',\n    example: '199.00',\n  })\n  price: number;\n\n  @IsNumber()\n  @IsPositive()\n  @ApiProperty({\n    description: 'Ano de lançamento do jogo',\n    example: '2017',\n  })\n  year: number;\n\n  @IsUrl()\n  @ApiProperty({\n    description: 'Link do trailer do jogo',\n    example: 'https://www.youtube.com/watch?v=l1x2SB3--gA',\n  })\n  TrailerYouTubeUrl: string;\n\n  @IsUrl()\n  @ApiProperty({\n    description: 'Link de gameplay do jogo',\n    example: 'https://www.youtube.com/watch?v=l1x2SB3--gA',\n  })\n  GameplayYouTubeUrl: string;\n\n  @IsNumber()\n  @ApiProperty({\n    description: 'Score do jogo no Imdb',\n    example: '5',\n  })\n  ImdbScore: number;\n\n  @IsUrl()\n  @ApiProperty({\n    description: 'Imagem do jogo',\n    example: 'https://m.media-amazon.com/images/I/71RTZKIq4bL._AC_SX342_.jpg',\n  })\n  image: string;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateGenreDto.html":{"url":"classes/CreateGenreDto.html","title":"class - CreateGenreDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateGenreDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/genre/dto/create-genre.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                genre\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        genre\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Gênero do jogo', example: 'Ação, Corrida, RPG'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/genre/dto/create-genre.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateGenreDto{\n  @ApiProperty({\n    description: 'Gênero do jogo',\n    example: 'Ação, Corrida, RPG',\n  })\n  genre: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProfileDto.html":{"url":"classes/CreateProfileDto.html","title":"class - CreateProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/dto/create-profile.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                gameId\n                            \n                            \n                                image\n                            \n                            \n                                name\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        gameId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/profile/dto/create-profile.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUrl()@ApiProperty({description: 'Imagem do Perfil', example: 'https://'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/profile/dto/create-profile.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'O nome usado para o perfil', example: 'tatianagandra123'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/profile/dto/create-profile.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'ID do Usuário (admin)', example: 'f7f45b19-bb7c-4f0d-87ea-f0d3c04423b5'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/profile/dto/create-profile.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, IsUrl } from 'class-validator';\n\nexport class CreateProfileDto {\n  @IsString()\n  @ApiProperty({\n    description: 'O nome usado para o perfil',\n    example: 'tatianagandra123',\n  })\n  name: string;\n\n  @IsString()\n  @ApiProperty({\n    description: 'ID do Usuário (admin)',\n    example: 'f7f45b19-bb7c-4f0d-87ea-f0d3c04423b5',\n  })\n  userId: string;\n\n  @IsUrl()\n  @ApiProperty({\n    description: 'Imagem do Perfil',\n    example: 'https://',\n  })\n  image: string;\n\n  gameId?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                confirmPassword\n                            \n                            \n                                cpf\n                            \n                            \n                                email\n                            \n                            \n                                image\n                            \n                            \n                                isAdmin\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        confirmPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'A confirmação da senha deve ser igual a senha', example: 'Abcd@1234'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cpf\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'CPF do usuario', example: '123.456.777-78'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsString()@IsNotEmpty()@ApiProperty({description: 'E-mail para cadastro do usuário.', example: 'tatianagandra78@gmail.com'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUrl()@ApiProperty({description: 'Imagem de perfil do usuário', example: 'https://avatars.githubusercontent.com/u/7906171'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'Nome de usuário. Utilizado no login. Deve ser único', example: 'tatianagandra'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(6)@Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {message: 'Senha muito fraca'})@ApiProperty({description: 'Senha do usuário para login', example: 'Abcd@1234'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:46\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {IsEmail,\n  IsNotEmpty,\n  IsString,\n  IsUrl,\n  Matches,\n  MinLength,\n} from 'class-validator'\n\nexport class CreateUserDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'Nome de usuário. Utilizado no login. Deve ser único',\n    example: 'tatianagandra',\n  })\n  name: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'CPF do usuario',\n    example: '123.456.777-78',\n  })\n  cpf: string;\n\n  @IsEmail()\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'E-mail para cadastro do usuário.',\n    example: 'tatianagandra78@gmail.com',\n  })\n  email: string;\n\n  @IsString()\n  @MinLength(6)\n  @Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {\n    message: 'Senha muito fraca',\n  })\n  @ApiProperty({\n    description: 'Senha do usuário para login',\n    example: 'Abcd@1234',\n  })\n  password: string;\n\n  @ApiProperty({\n    description: 'A confirmação da senha deve ser igual a senha',\n    example: 'Abcd@1234',\n  })\n  confirmPassword: string;\n\n  @IsUrl()\n  @ApiProperty({\n    description: 'Imagem de perfil do usuário',\n    example: 'https://avatars.githubusercontent.com/u/7906171',\n  })\n  image: string;\n  isAdmin: boolean;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Game.html":{"url":"classes/Game.html","title":"class - Game","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Game\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/entities/game.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                description\n                            \n                            \n                                GameplayYouTubeUrl\n                            \n                            \n                                    Optional\n                                genreName\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                image\n                            \n                            \n                                ImdbScore\n                            \n                            \n                                price\n                            \n                            \n                                title\n                            \n                            \n                                TrailerYouTubeUrl\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/game/entities/game.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/game/entities/game.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GameplayYouTubeUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/game/entities/game.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        genreName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/game/entities/game.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/game/entities/game.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/game/entities/game.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ImdbScore\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/game/entities/game.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/game/entities/game.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/game/entities/game.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TrailerYouTubeUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/game/entities/game.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/game/entities/game.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        year\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/game/entities/game.entity.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Game {\n  id?: string;\n  title: string;\n  description: string;\n  price: number;\n  year: number;\n  image: string;\n  TrailerYouTubeUrl: string;\n  GameplayYouTubeUrl: string;\n  genreName?: string;\n  ImdbScore: number;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GameController.html":{"url":"controllers/GameController.html","title":"controller - GameController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GameController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/game.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                game\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findById\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(user: User, dto: CreateGameDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Comprar um jogo'})\n                \n            \n\n            \n                \n                    Defined in src/game/game.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                CreateGameDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(user: User, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: 'Remover um jogo pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/game/game.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Listar todos os jogos'})\n                \n            \n\n            \n                \n                    Defined in src/game/game.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Visualizar um jogo pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/game/game.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(user: User, id: string, dto: UpdateGameDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Editar um jogo pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/game/game.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateGameDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body,Controller, Delete, Get,HttpCode,HttpStatus,Param,Patch,Post,UseGuards } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { GameService } from './game.service';\nimport { CreateGameDto } from './dto/create-game.dto';\nimport { UpdateGameDto } from './dto/update-game.dto';\nimport { Game } from './entities/game.entity';\nimport { LoggedUser } from 'src/auth/logged-user.decorator';\nimport { User } from 'src/user/entities/user.entity';\n\n\n@ApiTags('game')\n@UseGuards(AuthGuard())\n@ApiBearerAuth()\n@Controller('game')\nexport class GameController {\n  constructor(private readonly gameService: GameService) {}\n\n  @Get()\n  @ApiOperation({\n    summary: 'Listar todos os jogos',\n  })\n\n  findAll(): Promise  {\n    return this.gameService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({\n    summary: 'Visualizar um jogo pelo ID',\n  })\n  findById(@Param('id') id: string): Promise {\n    return this.gameService.findById(id);\n  }\n\n  @Post()\n  @ApiOperation({\n    summary: 'Comprar um jogo',\n  })\n  create(@LoggedUser() user: User, @Body() dto: CreateGameDto): Promise {\n    return this.gameService.create(user, dto);\n  }\n\n  @Patch(':id')\n  @ApiOperation({\n    summary: 'Editar um jogo pelo ID',\n  })\n  update(@LoggedUser() user: User, @Param('id') id: string, @Body() dto: UpdateGameDto): Promise {\n    return this.gameService.update(user, id, dto);\n  }\n\n  @Delete(':id')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({\n    summary: 'Remover um jogo pelo ID',\n  })\n  delete(@LoggedUser() user: User, @Param('id') id: string) {\n    this.gameService.delete(user, id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GameModule.html":{"url":"modules/GameModule.html","title":"module - GameModule","body":"\n                   \n\n\n\n\n    Modules\n    GameModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_GameModule\n\n\n\ncluster_GameModule_imports\n\n\n\ncluster_GameModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nGameModule\n\nGameModule\n\nGameModule -->\n\nPrismaModule->GameModule\n\n\n\n\n\nGameService\n\nGameService\n\nGameModule -->\n\nGameService->GameModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/game/game.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GameService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            GameController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { GameController } from './game.controller';\nimport { GameService } from './game.service';\nimport { PrismaModule } from '../prisma/prisma.module'\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n  controllers: [GameController],\n  providers: [GameService],\n})\nexport class GameModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameService.html":{"url":"injectables/GameService.html","title":"injectable - GameService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/game.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/game/game.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(user: User, dto: CreateGameDto)\n                \n            \n\n\n            \n                \n                    Defined in src/game/game.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                CreateGameDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(user: User, id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/game/game.service.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/game/game.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/game/game.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(user: User, id: string, dto: UpdateGameDto)\n                \n            \n\n\n            \n                \n                    Defined in src/game/game.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateGameDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NotFoundException,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { CreateGameDto } from './dto/create-game.dto';\nimport { UpdateGameDto } from './dto/update-game.dto';\nimport { Game } from './entities/game.entity';\nimport { User } from 'src/user/entities/user.entity';\nimport { Prisma } from '@prisma/client';\n\n\n@Injectable()\nexport class GameService {\nconstructor(private readonly prisma: PrismaService) {}\n\n//Em findAll dizemos para aguardar uma Promise de uma array de entidades Game//\n  findAll(): Promise {\n    return this.prisma.game.findMany({\n    include: {\n      genre: true,\n    },\n  });\n}\n\nasync findById(id: string) {\n  const record = await this.prisma.game.findUnique({\n    where: { id },\n    include: {\n      genre: true,\n    },\n  });\n\n    if (!record) {\n      throw new NotFoundException(`Registro com o '${id}' não encontrado.`)\n    }\n\n    return record;\n  }\n\n  //e no método create para aguardar uma Promise de uma entidade Game.//\n  async create(user: User, dto: CreateGameDto) {\n    if (user.isAdmin) {\n      const data: Prisma.GameCreateInput = {\n        title: dto.title,\n        description: dto.description,\n        price: dto.price,\n        year: dto.year,\n        image: dto.image,\n        TrailerYouTubeUrl: dto.TrailerYouTubeUrl,\n        GameplayYouTubeUrl: dto.GameplayYouTubeUrl,\n        ImdbScore: dto.ImdbScore,\n        genre: {\n          connect: {\n            genre: dto.genreName,\n          },\n        },\n      };\n      return await this.prisma.game.create({\n        data,\n        include: {\n          genre: true,\n        },\n      });\n    } else {\n      throw new UnauthorizedException(\n        'Usuário não autorizado. Contate o Administrador!',\n      );\n    }\n  }\n  async update(user: User, id: string, dto: UpdateGameDto) {\n    if (user.isAdmin) {\n      const gameChosen = await this.findById(id);\n      const data: Prisma.GameUpdateInput = {\n        title: dto.title,\n        description: dto.description,\n        price: dto.price,\n        year: dto.year,\n        image: dto.image,\n        TrailerYouTubeUrl: dto.TrailerYouTubeUrl,\n        GameplayYouTubeUrl: dto.GameplayYouTubeUrl,\n        ImdbScore: dto.ImdbScore,\n        genre: {\n          disconnect: {\n            genre: gameChosen.genre[0].genre,\n          },\n          connect: {\n            genre: dto.genreName,\n          },\n        },\n      };\n      return this.prisma.game.update({\n        where: { id },\n        data,\n        include: {\n          genre: true,\n        },\n      });\n    } else {\n      throw new UnauthorizedException(\n        'Usuário não autorizado. Contate o Administrador!',\n      );\n    }\n  }\n\n  async delete(user: User, id: string) {\n    if (user.isAdmin) {\n      await this.findById(id);\n      await this.prisma.game.delete({ where: { id } });\n    } else {\n      throw new UnauthorizedException(\n        'Usuário não autorizado. Contate o Administrador!',\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Genre.html":{"url":"classes/Genre.html","title":"class - Genre","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Genre\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/genre/entities/genre.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                genre\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/genre/entities/genre.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        genre\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/genre/entities/genre.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/genre/entities/genre.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/genre/entities/genre.entity.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Genre {\n  id?: string;\n  genre: string;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GenreController.html":{"url":"controllers/GenreController.html","title":"controller - GenreController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GenreController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/genre/genre.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                genre\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findById\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(user: User, dto: CreateGenreDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Registrar um novo gênero'})\n                \n            \n\n            \n                \n                    Defined in src/genre/genre.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                CreateGenreDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(user: User, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: 'Remover um gênero pelo seu ID'})\n                \n            \n\n            \n                \n                    Defined in src/genre/genre.controller.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Listar todos os gêneros'})\n                \n            \n\n            \n                \n                    Defined in src/genre/genre.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Visualizar um gênero pelo seu ID'})\n                \n            \n\n            \n                \n                    Defined in src/genre/genre.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(user: User, id: string, dto: UpdateGenreDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Editar um gênero pelo seu ID'})\n                \n            \n\n            \n                \n                    Defined in src/genre/genre.controller.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateGenreDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Param,\n  Patch,\n  Post,\n  UseGuards,\n} from '@nestjs/common';\nimport { CreateGenreDto } from './dto/create-genre.dto';\nimport { UpdateGenreDto } from './dto/update-genre.dto';\nimport { GenreService } from './genre.service';\nimport { ApiBearerAuth, ApiOAuth2, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { Genre } from './entities/genre.entity';\nimport { User } from 'src/user/entities/user.entity'\nimport { AuthGuard } from '@nestjs/passport';\nimport { LoggedUser } from 'src/auth/logged-user.decorator';\n\n\n@ApiTags('genre')\n@UseGuards(AuthGuard())\n@ApiBearerAuth()\n@Controller('genre')\nexport class GenreController {\n  constructor(private readonly genreService: GenreService) {}\n\n  @Get()\n  @ApiOperation({\n    summary: 'Listar todos os gêneros',\n  })\n  findAll(): Promise {\n    return this.genreService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({\n    summary: 'Visualizar um gênero pelo seu ID',\n  })\n  findById(@Param('id') id: string): Promise {\n    return this.genreService.findById(id);\n  }\n\n  @Post()\n  @ApiOperation({\n    summary: 'Registrar um novo gênero',\n  })\n  create(@LoggedUser() user: User, @Body() dto: CreateGenreDto): Promise {\n    return this.genreService.create (user, dto);\n  }\n\n  @Patch(':id')\n  @ApiOperation({\n    summary: 'Editar um gênero pelo seu ID',\n  })\n  update(@LoggedUser() user: User,@Param('id') id: string, @Body() dto: UpdateGenreDto): Promise {\n    return this.genreService.update(id, dto,user);\n  }\n\n  @Delete(':id')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({\n    summary: 'Remover um gênero pelo seu ID',\n  })\n  delete(@LoggedUser() user: User,@Param('id') id: string) {\n    this.genreService.delete(user, id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GenreModule.html":{"url":"modules/GenreModule.html","title":"module - GenreModule","body":"\n                   \n\n\n\n\n    Modules\n    GenreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_GenreModule\n\n\n\ncluster_GenreModule_providers\n\n\n\ncluster_GenreModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nGenreModule\n\nGenreModule\n\nGenreModule -->\n\nPrismaModule->GenreModule\n\n\n\n\n\nGenreService\n\nGenreService\n\nGenreModule -->\n\nGenreService->GenreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/genre/genre.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GenreService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            GenreController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { GenreController } from './genre.controller';\nimport { GenreService } from './genre.service';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt'})],\n  controllers: [GenreController],\n  /* providers irão forcener o conteúdo */\n  providers: [GenreService],\n})\nexport class GenreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GenreService.html":{"url":"injectables/GenreService.html","title":"injectable - GenreService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GenreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/genre/genre.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/genre/genre.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(user: User, dto: CreateGenreDto)\n                \n            \n\n\n            \n                \n                    Defined in src/genre/genre.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                CreateGenreDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(user: User, id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/genre/genre.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/genre/genre.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/genre/genre.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: UpdateGenreDto, user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/genre/genre.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateGenreDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NotFoundException,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { User } from 'src/user/entities/user.entity';\nimport { handleError } from 'src/utils/handle-error.util';\nimport { CreateGenreDto } from './dto/create-genre.dto';\nimport { UpdateGenreDto } from './dto/update-genre.dto';\nimport { Genre } from './entities/genre.entity';\n\n@Injectable()\nexport class GenreService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  findAll(): Promise {\n    return this.prisma.genre.findMany();\n  }\n\n  async findById(id: string) {\n    const record = await this.prisma.genre.findUnique({ where: { id } });\n    if (!record) {\n      throw new NotFoundException(`Registro com o ID: '${id}' não encontrado`);\n    }\n    return record;\n  }\n\n  async create(user: User, dto: CreateGenreDto) {\n    if (user.isAdmin) {\n      const genre: Genre = { ...dto };\n      return await this.prisma.genre.create({ data: genre });\n    } else {\n      throw new UnauthorizedException(\n        'Usuário não autorizado. Contate o Administrador!',\n      );\n    }\n  }\n\n  async update(id: string, dto: UpdateGenreDto, user: User) {\n    if (user.isAdmin) {\n      await this.findById(id);\n      const data: Partial = { ...dto };\n      return this.prisma.genre\n        .update({\n          where: { id },\n          data,\n        })\n        .catch(handleError);\n    } else {\n\n    }\n  }\n\n  async delete(user: User, id: string) {\n    if (user.isAdmin) {\n      await this.findById(id);\n      await this.prisma.genre.delete({ where: { id } });\n    } else {\n      throw new UnauthorizedException(\n        'Usuário não autorizado. Contate o Administrador!',\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HomepageController.html":{"url":"controllers/HomepageController.html","title":"controller - HomepageController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HomepageController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/homepage/homepage.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                homepage\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/homepage/homepage.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param} from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { HomepageService } from './homepage.service';\n\n@ApiTags('homepage')\n@Controller('homepage')\nexport class HomepageController {\n  constructor(private readonly homepageService: HomepageService) {}\n\n  @Get(':id')\n  findAll(@Param('id') id: string) {\n    return this.homepageService.findAll(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomepageModule.html":{"url":"modules/HomepageModule.html","title":"module - HomepageModule","body":"\n                   \n\n\n\n\n    Modules\n    HomepageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HomepageModule\n\n\n\ncluster_HomepageModule_providers\n\n\n\ncluster_HomepageModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nHomepageModule\n\nHomepageModule\n\nHomepageModule -->\n\nPrismaModule->HomepageModule\n\n\n\n\n\nHomepageService\n\nHomepageService\n\nHomepageModule -->\n\nHomepageService->HomepageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/homepage/homepage.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            HomepageService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            HomepageController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { HomepageService } from './homepage.service';\nimport { HomepageController } from './homepage.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt'})],\n  controllers: [HomepageController],\n  providers: [HomepageService]\n})\nexport class HomepageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HomepageService.html":{"url":"injectables/HomepageService.html","title":"injectable - HomepageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HomepageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/homepage/homepage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/homepage/homepage.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/homepage/homepage.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Injectable()\nexport class HomepageService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  async findAll(id: string) {\n    const profileData = await this.prisma.profile.findUnique({\n      where: { id: id },\n      /* SELECIONAR O PERFIL E USUÁRIO \"RESPONSÁVEL\" */\n      select: {\n        name: true,\n        image: true,\n        user: {\n          select: {\n            name: true,\n            isAdmin: true,\n          },\n        },\n        /* EXIBIR OS JOGOS DESTE PERFIL, ASSIM COMO SEU RESPECTIVO GÊNERO */\n        game: {\n          select: {\n            title: true,\n            image: true,\n            genre: {\n              select: {\n                genre: true,\n              },\n            },\n          },\n        },\n        favgames: {\n          select: {\n            game: true,\n          },\n        },\n      },\n    });\n\n    /* EXIBIR TODOS OS GÊNEROS */\n    const allGenres = await this.prisma.genre.findMany({\n      select: {\n        genre: true,\n        game: {\n          select: {\n            title: true,\n            image: true,\n          },\n        },\n      },\n    });\n    return { profileData, allGenres };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(private readonly prisma: PrismaService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: process.env.JWT_SECRET,\n    });\n  }\n\n  async validate(payload: { email: string }) {\n    const user = await this.prisma.user.findUnique({\n      where: { email: payload.email },\n    });\n\n    if (!user) {\n      throw new UnauthorizedException(\n        'Usuário não existe ou não está autenticado',\n      );\n    }\n\n    delete user.password;\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsEmail()@ApiProperty({description: 'Email da conta', example: 'tatianagandra78@gmail.com'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'Senha do usuário', example: 'Abcd@1234'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {IsEmail, IsNotEmpty, IsString } from 'class-validator';\n\nexport class LoginDto {\n  @IsString()\n  @IsNotEmpty()\n  @IsEmail()\n  @ApiProperty({\n    description: 'Email da conta',\n    example: 'tatianagandra78@gmail.com',\n  })\n  email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'Senha do usuário',\n    example: 'Abcd@1234',\n  })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Module({\n  providers: [PrismaService],// Determina os provedores existentes\n\texports: [PrismaService], // Realiza a exportação dos provedores que precisarão ser utilizados em outros módulos.\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from \"@nestjs/common\";\nimport { PrismaClient } from \"@prisma/client\";\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n\t// Garante que o banco está conectado\n\tasync onModuleInit() {\n\t\tawait this.$connect();\n\t}\n\n\t// Garante que antes de desligar a aplicação o banco será desconectado\n\tasync enableShutdownHooks(app: INestApplication) {\n\t\tthis.$on(\"beforeExit\", async () => {\n\t\t\tawait app.close();\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Profile.html":{"url":"classes/Profile.html","title":"class - Profile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Profile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/entities/profile.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                game\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                image\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    Optional\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/profile/entities/profile.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        game\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Game[]\n\n                    \n                \n                    \n                        \n                                Defined in src/profile/entities/profile.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/profile/entities/profile.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/profile/entities/profile.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/profile/entities/profile.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/profile/entities/profile.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/profile/entities/profile.entity.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Game } from \"src/game/entities/game.entity\";\nimport { User } from \"src/user/entities/user.entity\";\n\nexport class Profile {\n  id?: string;\n  name: string;\n  image: string;\n  user?: User;\n  game?: Game[];\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProfileController.html":{"url":"controllers/ProfileController.html","title":"controller - ProfileController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProfileController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/profile.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                profile\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findById\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(user: User, dto: CreateProfileDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Criar um novo Perfil'})\n                \n            \n\n            \n                \n                    Defined in src/profile/profile.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                CreateProfileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(user: User, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: 'Deletar um Perfil pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/profile/profile.controller.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Listar todos os perfis'})\n                \n            \n\n            \n                \n                    Defined in src/profile/profile.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Visualizar um Perfil pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/profile/profile.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(user: User, id: string, dto: UpdateProfileDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Editar um Perfil pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/profile/profile.controller.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateProfileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  HttpCode,\n  HttpStatus,\n  UseGuards,\n} from '@nestjs/common';\nimport { ProfileService } from './profile.service';\nimport { CreateProfileDto } from './dto/create-profile.dto';\nimport { UpdateProfileDto } from './dto/update-profile.dto';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\nimport { LoggedUser } from 'src/auth/logged-user.decorator';\nimport { User } from 'src/user/entities/user.entity';\n\n@ApiTags('profile')\n@UseGuards(AuthGuard())\n@ApiBearerAuth()\n@Controller('profile')\nexport class ProfileController {\n  constructor(private readonly profileService: ProfileService) {}\n\n  @Get()\n  @ApiOperation({\n    summary: 'Listar todos os perfis',\n  })\n  findAll() {\n    return this.profileService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({\n    summary: 'Visualizar um Perfil pelo ID',\n  })\n  findById(@Param('id') id: string) {\n    return this.profileService.findById(id);\n  }\n\n  @Post()\n  @ApiOperation({\n    summary: 'Criar um novo Perfil',\n  })\n  create(@LoggedUser() user: User, @Body() dto: CreateProfileDto) {\n    return this.profileService.create(user.id, dto);\n  }\n\n  @Patch(':id')\n  @ApiOperation({\n    summary: 'Editar um Perfil pelo ID',\n  })\n  update(\n    @LoggedUser() user: User,\n    @Param('id') id: string,\n    @Body() dto: UpdateProfileDto,\n  ) {\n    return this.profileService.update(user.id, id, dto);\n  }\n\n  @Delete(':id')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({\n    summary: 'Deletar um Perfil pelo ID',\n  })\n  delete(@LoggedUser() user: User, @Param('id') id: string) {\n    return this.profileService.delete(user, id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileModule.html":{"url":"modules/ProfileModule.html","title":"module - ProfileModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_providers\n\n\n\ncluster_ProfileModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nPrismaModule->ProfileModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/profile/profile.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProfileService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProfileController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProfileService } from './profile.service';\nimport { ProfileController } from './profile.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt'})],\n  controllers: [ProfileController],\n  providers: [ProfileService]\n})\nexport class ProfileModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfileService.html":{"url":"injectables/ProfileService.html","title":"injectable - ProfileService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProfileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/profile.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/profile/profile.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(userId: string, dto: CreateProfileDto)\n                \n            \n\n\n            \n                \n                    Defined in src/profile/profile.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                CreateProfileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(user: User, id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/profile/profile.service.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/profile/profile.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/profile/profile.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(userId: string, id: string, dto: UpdateProfileDto)\n                \n            \n\n\n            \n                \n                    Defined in src/profile/profile.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateProfileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NotFoundException,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { User } from 'src/user/entities/user.entity';\nimport { handleError } from 'src/utils/handle-error.util';\nimport { CreateProfileDto } from './dto/create-profile.dto';\nimport { UpdateProfileDto } from './dto/update-profile.dto';\nimport { Profile } from './entities/profile.entity';\n\n@Injectable()\nexport class ProfileService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  findAll() {\n    return this.prisma.profile.findMany({\n      include: {\n        user: true,\n        game: true,\n        favgames: {\n          select: {\n            game: {\n              select: {\n                title: true,\n              },\n            },\n          },\n        },\n      },\n    });\n  }\n\n  async findById(id: string) {\n    const record = await this.prisma.profile.findUnique({\n      where: { id: id },\n      include: {\n        game: true,\n      },\n    });\n\n    if (!record) {\n      throw new NotFoundException(`Registro com o ID: '${id}' não encontrado`);\n    }\n    return record;\n  }\n\n  async create(userId: string, dto: CreateProfileDto) {\n    if (dto.gameId) {\n      return await this.prisma.profile\n        .create({\n          data: {\n            name: dto.name,\n            image: dto.image,\n            userId: dto.userId,\n            game: {\n              connect: {\n                id: dto.gameId,\n              },\n            },\n          },\n          include: {\n            game: true,\n            favgames: true,\n          },\n        })\n        .catch(handleError);\n    } else {\n      return await this.prisma.profile\n        .create({\n          data: {\n            name: dto.name,\n            image: dto.image,\n            userId: dto.userId,\n          },\n          include: {\n            favgames: true,\n          },\n        })\n        .catch(handleError);\n    }\n  }\n\n  async update(userId: string, id: string, dto: UpdateProfileDto) {\n    await this.findById(id);\n    if (dto.gameId) {\n      return this.prisma.profile\n        .update({\n          where: { id },\n          data: {\n            name: dto.name,\n            image: dto.image,\n            userId: userId,\n            favgames: {\n              connect: {\n                id: dto.gameId,\n              },\n            },\n          },\n          include: { favgames: true },\n        })\n        .catch(handleError);\n    } else {\n      return this.prisma.profile\n        .update({\n          where: { id },\n          data: {\n            name: dto.name,\n            image: dto.image,\n            userId: userId,\n          },\n          include: { favgames: true },\n        })\n        .catch(handleError);\n    }\n  }\n\n  async delete(user: User, id: string) {\n    if (user.isAdmin) {\n      await this.findById(id);\n      await this.prisma.profile.delete({ where: { id } });\n    } else {\n      throw new UnauthorizedException(\n        'Usuário não autorizado. Contate o Administrador!',\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateGameDto.html":{"url":"classes/UpdateGameDto.html","title":"class - UpdateGameDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateGameDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/dto/update-game.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateGameDto } from './create-game.dto';\n\nexport class UpdateGameDto extends PartialType(CreateGameDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateGenreDto.html":{"url":"classes/UpdateGenreDto.html","title":"class - UpdateGenreDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateGenreDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/genre/dto/update-genre.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/mapped-types\";\nimport { CreateGenreDto } from \"./create-genre.dto\";\n\nexport class UpdateGenreDto extends PartialType(CreateGenreDto){}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProfileDto.html":{"url":"classes/UpdateProfileDto.html","title":"class - UpdateProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/dto/update-profile.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateProfileDto } from './create-profile.dto';\n\nexport class UpdateProfileDto extends PartialType(CreateProfileDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/user.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cpf\n                            \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                email\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                image\n                            \n                            \n                                    Optional\n                                isAdmin\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cpf\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        isAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n  id?: string;\n  isAdmin?: boolean;\n  name: string;\n  cpf: string;\n  email: string;\n  password: string;\n  image: string;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findById\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Criar um usuário'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@UseGuards(undefined)@ApiBearerAuth()@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: 'Deletar um usuário pelo seu ID'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(undefined)@ApiBearerAuth()@ApiOperation({summary: 'Listar todos os usuários'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@UseGuards(undefined)@ApiBearerAuth()@ApiOperation({summary: 'Listar um usuário pelo seu ID'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(user: User, id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@UseGuards(undefined)@ApiBearerAuth()@ApiOperation({summary: 'Atualizar um usuário pelo seu ID'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete,HttpCode, HttpStatus, UseGuards} from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\nimport { User } from './entities/user.entity';\nimport { LoggedUser } from 'src/auth/logged-user.decorator';\n\n@ApiTags('user')\n@Controller('user')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @Post()\n  @ApiOperation({\n    summary: 'Criar um usuário',\n  })\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.userService.create(createUserDto);\n  }\n\n  @Get()\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @ApiOperation({\n    summary: 'Listar todos os usuários',\n  })\n\n  findAll() {\n    return this.userService.findAll();\n  }\n\n  @Get(':id')\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @ApiOperation({\n    summary: 'Listar um usuário pelo seu ID',\n  })\n\n  findById(@Param('id') id: string) {\n    return this.userService.findById(id);\n  }\n\n  @Patch(':id')\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @ApiOperation({\n    summary: 'Atualizar um usuário pelo seu ID',\n  })\n  update(@LoggedUser() user: User,@Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {\n    return this.userService.update(user, id, updateUserDto);\n  }\n\n  @Delete(':id')\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({\n    summary: 'Deletar um usuário pelo seu ID',\n  })\n  delete(@Param('id') id: string) {\n    return this.userService.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { UserController } from './user.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n  controllers: [UserController],\n  providers: [UserService]\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isAdmin\n                            \n                            \n                                    Private\n                                userSelect\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(user: User, id: string, dto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/user/user.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userSelect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: true,\n    name: true,\n    email: true,\n    image: true,\n    password: false,\n    cpf: true,\n    isAdmin: true,\n    createdAt: true,\n    updatedAt: true,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/user/user.service.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { User } from './entities/user.entity';\nimport * as bcrypt from 'bcrypt';\nimport { handleError } from 'src/utils/handle-error.util';\n\n\n@Injectable()\nexport class UserService {\n  isAdmin: any;\n  constructor(private readonly prisma: PrismaService) {}\n\n  private userSelect = {\n    id: true,\n    name: true,\n    email: true,\n    image: true,\n    password: false,\n    cpf: true,\n    isAdmin: true,\n    createdAt: true,\n    updatedAt: true,\n  };\n\n  async findAll(){\n    return await this.prisma.user.findMany({\n      select: this.userSelect,\n    });\n  }\n\n  async findById(id: string){\n    const data = await this.prisma.user.findUnique({\n      where: { id },\n      select: this.userSelect,\n    });\n    if (!data) {\n      throw new NotFoundException(`Registro com o ID '${id}' não encontrado.`);\n    }\n    return data;\n  }\n\n  async create(dto: CreateUserDto) {\n    if (dto.password != dto.confirmPassword) {\n      throw new BadRequestException('As senhas informadas não são iguais.');\n    }\n    delete dto.confirmPassword;\n    const data: User = {\n      ...dto,\n      password: await bcrypt.hash(dto.password, 10),\n    };\n    return this.prisma.user\n      .create({\n        data,\n        select: this.userSelect,\n      })\n      .catch(handleError);\n  }\n\n  async update(user: User, id: string, dto: UpdateUserDto){\n    if (this.isAdmin) {\n      await this.findById(id);\n\n      if (dto.cpf) {\n        throw new BadRequestException('Não é possível alterar o CPF do usuário');\n      }\n      if (dto.password) {\n        if (dto.password != dto.confirmPassword) {\n          throw new BadRequestException('As senhas informadas não são iguais.');\n        }\n      }\n      delete dto.confirmPassword;\n      const data: Partial = { ...dto };\n      if (data.password) {\n        data.password = await bcrypt.hash(data.password, 10);\n      }\n      return this.prisma.user.update({\n        where: { id },\n        data,\n        select: this.userSelect,\n      });\n\n    }else{\n      throw new UnauthorizedException(\n        'Usuário não autorizado. Contate o Administrador!',\n      );\n    }\n\n  }\n\n  async delete(id: string) {\n    await this.findById(id);\n    await this.prisma.user.delete({ where: { id:id } });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/logged-user.decorator.ts\n            \n            variable\n            LoggedUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/game/dto/create-game.dto.ts\n            \n            class\n            CreateGameDto\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/game/dto/update-game.dto.ts\n            \n            class\n            UpdateGameDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/game/entities/game.entity.ts\n            \n            class\n            Game\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/game/game.controller.ts\n            \n            controller\n            GameController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/game/game.service.ts\n            \n            injectable\n            GameService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/genre/dto/create-genre.dto.ts\n            \n            class\n            CreateGenreDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/genre/dto/update-genre.dto.ts\n            \n            class\n            UpdateGenreDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/genre/entities/genre.entity.ts\n            \n            class\n            Genre\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/genre/genre.controller.ts\n            \n            controller\n            GenreController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/genre/genre.service.ts\n            \n            injectable\n            GenreService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/homepage/homepage.controller.ts\n            \n            controller\n            HomepageController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/homepage/homepage.service.ts\n            \n            injectable\n            HomepageService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/profile/dto/create-profile.dto.ts\n            \n            class\n            CreateProfileDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/profile/dto/update-profile.dto.ts\n            \n            class\n            UpdateProfileDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/profile/entities/profile.entity.ts\n            \n            class\n            Profile\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/profile/profile.controller.ts\n            \n            controller\n            ProfileController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/profile/profile.service.ts\n            \n            injectable\n            ProfileService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/user/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/user/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/utils/handle-error.util.ts\n            \n            function\n            handleError\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/jwt : ^8.0.1\n        \n            @nestjs/mapped-types : ^1.0.1\n        \n            @nestjs/passport : ^8.2.1\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/swagger : ^5.2.1\n        \n            @prisma/client : ^3.15.1\n        \n            bcrypt : ^5.0.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.4.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            handleError   (src/.../handle-error.util.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/utils/handle-error.util.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n            \n                \nhandleError(error: Error)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GameModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GenreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomepageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_GameModule\n\n\n\ncluster_GameModule_providers\n\n\n\ncluster_GenreModule\n\n\n\ncluster_GenreModule_providers\n\n\n\ncluster_HomepageModule\n\n\n\ncluster_HomepageModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nGameModule\n\nGameModule\n\nAppModule -->\n\nGameModule->AppModule\n\n\n\n\n\nGenreModule\n\nGenreModule\n\nAppModule -->\n\nGenreModule->AppModule\n\n\n\n\n\nHomepageModule\n\nHomepageModule\n\nAppModule -->\n\nHomepageModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\nGameModule -->\n\nPrismaModule->GameModule\n\n\n\nGenreModule -->\n\nPrismaModule->GenreModule\n\n\n\nHomepageModule -->\n\nPrismaModule->HomepageModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nPrismaModule->ProfileModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nGameService\n\nGameService\n\nGameModule -->\n\nGameService->GameModule\n\n\n\n\n\nGenreService\n\nGenreService\n\nGenreModule -->\n\nGenreService->GenreModule\n\n\n\n\n\nHomepageService\n\nHomepageService\n\nHomepageModule -->\n\nHomepageService->HomepageModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    13 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            LoggedUser   (src/.../logged-user.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/logged-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LoggedUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((_, ctx: ExecutionContext) => {\n  const request = ctx.switchToHttp().getRequest();\n  const user = request.user;\n\n  \n  return user;\n})\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
